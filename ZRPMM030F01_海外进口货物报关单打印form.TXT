*&---------------------------------------------------------------------*
*&  包含                ZRPMM028F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_INITIAL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_initial_data .
  s_bedat = 'IBT'.
  s_bedat-low = sy-datum - 90.
  s_bedat-high = sy-datum.
  APPEND s_bedat.
  CLEAR s_bedat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_data .
  DATA:BEGIN OF lt_lfa1 OCCURS 0,
         lifnr LIKE lfa1-lifnr,
         name1 LIKE lfa1-name1,
         land1 LIKE lfa1-land1,
         landx LIKE t005t-landx,
       END OF lt_lfa1.

  SELECT a~zxhm a~ebeln b~lifnr b~waers
    INTO CORRESPONDING FIELDS OF TABLE gt_out
    FROM ztmm005 AS a INNER JOIN ekko AS b ON a~ebeln = b~ebeln
    WHERE b~lifnr = p_lifnr
      AND b~ebeln IN s_ebeln
      AND b~bedat IN s_bedat
      AND b~loekz EQ space
      AND b~frgke EQ 'R'
      AND a~zxhm = p_zxhm
      AND a~zflag NE 'X' .  "change by pft 20171108  增加限制条件

  CHECK gt_out[] IS NOT INITIAL.
  SELECT lifnr name1 land1
    INTO CORRESPONDING FIELDS OF TABLE lt_lfa1
    FROM lfa1
    WHERE lifnr = p_lifnr.
  LOOP AT lt_lfa1.
    SELECT SINGLE landx INTO lt_lfa1-landx FROM t005t WHERE spras = sy-langu AND land1 = lt_lfa1-land1.
    MODIFY lt_lfa1.
  ENDLOOP.
  SORT lt_lfa1 BY lifnr.

  LOOP AT gt_out.
*  取币别描述
    SELECT SINGLE ktext INTO gt_out-ktext FROM tcurt WHERE spras = sy-langu AND waers = gt_out-waers.
    READ TABLE lt_lfa1 WITH KEY lifnr = gt_out-lifnr BINARY SEARCH.
    IF sy-subrc = 0.
      gt_out-name1 = lt_lfa1-name1.
      gt_out-land1 = lt_lfa1-land1.
      gt_out-landx = lt_lfa1-landx.
    ENDIF.
    MODIFY gt_out.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_fieldcat .
  mcr_build_fieldcat:'CHECK'  '选择'         ''         ''         'C'   '1',
                     'LIFNR'  '供应商号码'   'LIFNR'    'EKKO'     ''    '',
                     'NAME1'  '供应商名称'   'NAME1'    'LFA1'     ''    '',
                     'EBELN'  '采购订单号'   'EBELN'    'LFA1'     ''    ''.

  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra      = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_output_data .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'FRM_PF_STATUS'
      i_callback_user_command  = 'FRM_USER_COMMAND'
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat[]
    TABLES
      t_outtab                 = gt_out[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FRM_PF_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_pf_status USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'PF_1000'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_USER_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_user_command USING r_ucomm LIKE sy-ucomm
                            rs_selfield TYPE slis_selfield..
  DATA:lv_grid TYPE REF TO cl_gui_alv_grid.

  rs_selfield-refresh = 'X'.
  rs_selfield-col_stable = 'X'.
  rs_selfield-row_stable = 'X'.

  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = lv_grid.

  CALL METHOD lv_grid->check_changed_data( ).

  CASE r_ucomm.
    WHEN 'ZDOWNLOAD'.
      READ TABLE gt_out WITH KEY check = 'X'.
      IF sy-subrc = 0.
        PERFORM frm_download_data.
      ELSE.
        MESSAGE '请至少选择一行数据' TYPE 'I'.
      ENDIF.
    WHEN 'ZALL'. "全选
      PERFORM frm_select_data USING 'X'.
    WHEN 'ZDALL'."取消全选
      PERFORM frm_select_data USING space.
    WHEN OTHERS.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_DOWNLOAD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_download_data .
  DATA:ls_key   TYPE wwwdatatab,
       lv_subrc TYPE sy-subrc.
  DATA lv_file LIKE rlgrap-filename.
  DATA:lv_sortl LIKE lfa1-sortl.

  SELECT SINGLE sortl INTO lv_sortl FROM lfa1 WHERE lifnr = p_lifnr.
  CONCATENATE 'C:\MM\' lv_sortl  '_报关草单_'  sy-datum  '_' sy-uzeit '.xls' INTO lv_file.

  ls_key-relid = 'MI'.
  ls_key-objid = gcst_excel_template.
  CALL FUNCTION 'DOWNLOAD_WEB_OBJECT'
    EXPORTING
      key         = ls_key
      destination = lv_file
    IMPORTING
      rc          = lv_subrc.
  IF lv_subrc <> 0.
    MESSAGE '下载模板出错，请检查，谢谢' TYPE 'E'.
    EXIT.
  ENDIF.
***填充EXCEL数据
  PERFORM frm_filldata_excel USING lv_file.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_FILLDATA_EXCEL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LV_FILE  text
*----------------------------------------------------------------------*
FORM frm_filldata_excel USING iv_file TYPE rlgrap-filename.
*******数据定义*******
  DATA:lo_excel     TYPE ole2_object,
       lo_workbooks TYPE ole2_object,
       lo_workbook  TYPE ole2_object,
       lo_sheet     TYPE ole2_object,
       lo_range     TYPE ole2_object,
       lo_cell      TYPE ole2_object,
       lo_cell1     TYPE ole2_object,
       activewindow TYPE ole2_object.
  DATA lv_file LIKE rlgrap-filename.

  DATA lv_row TYPE i.
  DATA lv_col TYPE i.
  DATA:lv_times TYPE i.
  DATA:lv_row_c TYPE i,
       lv_row_l TYPE i.

  DEFINE mac_fill_cell.
    CALL METHOD OF lo_sheet 'CELLS' = lo_cell
      EXPORTING
        #1 = &1
        #2 = &2.
    SET PROPERTY OF lo_cell 'VALUE' = &3.
  END-OF-DEFINITION.

  DATA:BEGIN OF lt_ekpo OCCURS 0,
         matnr LIKE ekpo-matnr,
         menge LIKE ekpo-menge,
         meins LIKE ekpo-meins,
         netpr LIKE ekpo-netpr, "单价
         netwr LIKE ekpo-netwr, "总价
       END OF lt_ekpo,
       lt_ekpo_col LIKE lt_ekpo OCCURS 0 WITH HEADER LINE.
  DATA:lt_ztsd003cpys LIKE ztsd003cpys OCCURS 0 WITH HEADER LINE.

  DATA:lt_data LIKE gt_out OCCURS 0 WITH HEADER LINE.
  DATA:lv_line    TYPE i,
       lv_num     TYPE i,
       lv_string  TYPE string,
       ls_ztmm004 TYPE ztmm004, "取件数、包装种类、毛重
       lv_menge   TYPE mseg-menge. "净重
  DATA:lv_matnr LIKE mara-matnr.

  APPEND LINES OF gt_out TO lt_data.
  DELETE lt_data WHERE check IS INITIAL.

  CHECK lt_data[] IS NOT INITIAL.
  SELECT matnr menge meins netpr netwr
    INTO CORRESPONDING FIELDS OF TABLE lt_ekpo
    FROM ekpo
    FOR ALL ENTRIES IN lt_data
    WHERE ebeln = lt_data-ebeln
      AND loekz EQ space.

  IF lt_ekpo[] IS INITIAL.
    MESSAGE '没有需要输出的数据' TYPE 'I'.
    EXIT.
  ELSE.
    LOOP AT lt_ekpo.
      CLEAR:lt_ekpo_col.
      MOVE-CORRESPONDING lt_ekpo TO lt_ekpo_col.
      CLEAR: lt_ekpo_col-netpr.
      COLLECT lt_ekpo_col.
      CLEAR: lt_ekpo.
    ENDLOOP.
  ENDIF.

  SORT lt_ekpo BY matnr.
  DELETE ADJACENT DUPLICATES FROM lt_ekpo COMPARING matnr.
***抓取产品要素信息
  SELECT * INTO TABLE lt_ztsd003cpys FROM ztsd003cpys FOR ALL ENTRIES IN lt_ekpo WHERE matnr = lt_ekpo-matnr.

***计算总的净重
  LOOP AT lt_ekpo_col.
    READ TABLE lt_ztsd003cpys WITH KEY matnr = lt_ekpo_col-matnr.
    IF sy-subrc = 0.
      lv_menge = lv_menge + lt_ekpo_col-menge * lt_ztsd003cpys-zjz.
    ENDIF.
  ENDLOOP.

*填充excel
  CREATE OBJECT lo_excel 'EXCEL.APPLICATION'.
  CALL METHOD OF lo_excel 'WORKBOOKS' = lo_workbooks.

  CALL METHOD OF lo_workbooks 'OPEN' = lo_workbook EXPORTING #1 = iv_file.
  CALL METHOD OF lo_workbook 'WORKSHEETS' = lo_sheet EXPORTING #1 = 1.
*  CALL METHOD OF lo_sheet 'ACTIVATE'.
********************************************************************************************
***------------------------填充抬头信息--------------------------------------------------***
********************************************************************************************
  READ TABLE lt_data INDEX 1.
  lv_row = 10.
  mac_fill_cell  lv_row  'A'  lt_data-landx.       "贸易国
  mac_fill_cell  lv_row  'E'  lt_data-landx.       "启动国
  mac_fill_cell  lv_row  'I'  lt_data-landx.       "装货港
  CLEAR:lv_string.
  CONCATENATE 'IM-' lt_data-name1+0(1) lt_data-ebeln INTO lv_string.
  lv_row = 14.
  mac_fill_cell  lv_row  'A'  lv_string.            "合同协议号
  CLEAR:ls_ztmm004.
  SELECT SINGLE * INTO ls_ztmm004 FROM ztmm004 WHERE zxhm = lt_data-zxhm.
  mac_fill_cell  lv_row  'E'  ls_ztmm004-menge.     "件数
  mac_fill_cell  lv_row  'G'  ls_ztmm004-zbz.       "包装种类
  mac_fill_cell  lv_row  'J'  ls_ztmm004-brgew.     "毛重
  mac_fill_cell  lv_row  'M'  lv_menge.             "净重

********************************************************************************************
***------------------------填充行项目信息sheet --------------------------------------***
********************************************************************************************
  DESCRIBE TABLE lt_ekpo LINES lv_line.
  lv_line = lv_line - 1.
  IF lv_line > 0.
    DO lv_line TIMES.
      CALL METHOD OF lo_sheet 'Cells' = lo_cell EXPORTING #1 = 21 #2 = 1.
      CALL METHOD OF lo_sheet 'Cells' = lo_cell1 EXPORTING #1 = 32 #2 = 15.
      CALL METHOD OF lo_sheet 'Range' = lo_range EXPORTING #1 = lo_cell #2 = lo_cell1.
      CALL METHOD OF lo_range 'Select' .
      CALL METHOD OF lo_range 'Copy'.
      CALL METHOD OF lo_sheet 'Cells' = lo_cell EXPORTING #1 = 33 #2 = 1.
      CALL METHOD OF lo_sheet 'Cells' = lo_cell1 EXPORTING #1 = 33 #2 = 15.
      CALL METHOD OF lo_sheet 'Range' = lo_range EXPORTING #1 = lo_cell #2 = lo_cell1.
      CALL METHOD OF lo_range 'Insert'.
    ENDDO.
  ENDIF.

  lv_num = 0.
  lv_row = 9.
  DATA: lv_row_xh TYPE i.
  LOOP AT lt_ekpo.
    lv_num = lv_num + 1.
    lv_row = lv_row + 12.
    mac_fill_cell  lv_row  'A'  lv_num.                      "序号
    READ TABLE lt_ekpo_col WITH KEY matnr = lt_ekpo-matnr.
    IF sy-subrc = 0.
      mac_fill_cell  lv_row  'F'  lt_ekpo_col-menge.            "数量
      CLEAR:lv_string.
      SELECT SINGLE mseht INTO lv_string FROM t006a WHERE msehi = lt_ekpo-meins AND spras = sy-langu.
      mac_fill_cell  lv_row  'G'  lv_string.                "单位
      mac_fill_cell  lv_row  'I'  lt_data-landx.            "原产国
      IF lt_ekpo_col-menge NE 0.
        lt_ekpo-netpr = lt_ekpo_col-netwr / lt_ekpo_col-menge.
        mac_fill_cell  lv_row  'K'  lt_ekpo-netpr.            "单价
      ENDIF.
      mac_fill_cell  lv_row  'L'  lt_ekpo_col-netwr.        "总价
      mac_fill_cell  lv_row  'N'  lt_data-ktext.            "币别
    ENDIF.
    lv_row_xh = lv_row.
    LOOP AT lt_ztsd003cpys WHERE matnr = lt_ekpo-matnr.
      IF lv_row_xh = lv_row.
        mac_fill_cell  lv_row_xh  'B'  lt_ztsd003cpys-zhs.       "商品编号
        mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zzwpm.     "品名
      ENDIF.
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zpp.     "品牌
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zxh.     "型号
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zdy.     "电压
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zgl.     "功率
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zjd.     "精度
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zjzcc.     "安装尺寸
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zjzl.     "交/直流
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zkbh.     "开/闭环
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zyt.     "用途
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zgn.     "功能
      lv_row_xh = lv_row_xh + 1.
      mac_fill_cell  lv_row_xh  'D'  lt_ztsd003cpys-zgzyl.     "工作原理
    ENDLOOP.
  ENDLOOP.

  CALL METHOD OF lo_sheet 'CELLS' = lo_cell EXPORTING #1 = 1 #2 = 1.
  CALL METHOD OF lo_cell 'SELECT'.
  SET PROPERTY OF lo_excel 'CutCopyMode' = 0.

  CALL METHOD OF lo_workbook 'SAVE'.
  SET PROPERTY OF lo_excel 'VISIBLE' = 1.
  FREE OBJECT:lo_excel,lo_workbooks,lo_workbook,lo_sheet,lo_range,lo_cell.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0265   text
*----------------------------------------------------------------------*
FORM frm_select_data  USING  u_flag TYPE c.
  LOOP AT gt_out WHERE check NE u_flag.
    gt_out-check = u_flag.
    MODIFY gt_out.
  ENDLOOP.
ENDFORM.
