*&---------------------------------------------------------------------*
*&  包含                ZRPPP015F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_data .
  DATA:BEGIN OF lt_marc OCCURS 0,
         matnr LIKE marc-matnr,
         werks LIKE marc-werks,
         dispo LIKE marc-dispo,
         spart LIKE mara-spart,
*        eisbe LIKE marc-eisbe,
       END OF lt_marc.

  DATA:lt_ztsd001c LIKE ztsd001c OCCURS 0 WITH HEADER LINE.

  DATA:BEGIN OF lt_dn_data OCCURS 0,
         vbeln     LIKE likp-vbeln,
         wadat_ist LIKE likp-wadat_ist,
         posnr     LIKE lips-posnr,
         matnr     LIKE lips-matnr,
         werks     LIKE lips-werks,
         lfimg     LIKE lips-lfimg,
       END OF lt_dn_data.

  DATA:BEGIN OF lt_mard OCCURS 0,
         matnr LIKE mard-matnr,
         werks LIKE mard-werks,
         lgort LIKE mard-lgort,
         labst LIKE mard-labst,
         insme LIKE mard-insme,
       END OF lt_mard.

  DATA:BEGIN OF lt_makt OCCURS 0,
         matnr LIKE makt-matnr,
         maktx LIKE makt-maktx,
       END OF lt_makt.

  DATA:BEGIN OF lt_afpo OCCURS 0,
         aufnr LIKE afpo-aufnr,
         matnr LIKE afpo-matnr,
         dwerk LIKE afpo-dwerk,
         psmng LIKE afpo-psmng,
         wemng LIKE afpo-wemng,
       END OF lt_afpo.

  DATA:BEGIN OF lt_po_data OCCURS 0,
         ebeln LIKE ekpo-ebeln,
         ebelp LIKE ekpo-ebelp,
         werks LIKE ekpo-werks,
         matnr LIKE ekpo-matnr,
         txz01 LIKE ekpo-txz01,
         etenr LIKE eket-etenr,
         eindt LIKE eket-eindt,
         menge LIKE eket-menge,  "计划行数量
         wemng LIKE eket-wemng,  "已收货数量
         zwqsl LIKE eket-menge,  "未清数量
         bpumz LIKE ekpo-bpumz,
         bpumn LIKE ekpo-bpumn,
       END OF lt_po_data.

  DATA:lv_date LIKE sy-datum.

  DATA:lt_mdps LIKE mdps OCCURS 0 WITH HEADER LINE,
       lt_mdez LIKE mdez OCCURS 0 WITH HEADER LINE,
       lt_mdsu LIKE mdsu OCCURS 0 WITH HEADER LINE.

  DATA:lv_date_low  LIKE sy-datum,
       lv_date_high LIKE sy-datum.
  DATA:lv_matnr LIKE mara-matnr.

***抓取满足条件的物料信息
  SELECT a~matnr
         a~werks
         a~dispo
         b~spart
*        a~eisbe
    INTO CORRESPONDING FIELDS OF TABLE lt_marc
    FROM marc AS a
    INNER JOIN mara AS b
    ON a~matnr = b~matnr
    WHERE a~matnr IN s_matnr
      AND a~werks IN s_werks
      AND a~dispo IN s_dispo
      AND b~spart IN s_spart.

  CHECK lt_marc[] IS NOT INITIAL.

***获取上个期间
  CALL FUNCTION 'BKK_ADD_MONTH_TO_DATE'
    EXPORTING
      months  = '-1'
      olddate = sy-datum
    IMPORTING
      newdate = lv_date.

***获取本月销售计划
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE lt_ztsd001c
    FROM ztsd001c
    FOR ALL ENTRIES IN lt_marc
    WHERE matnr = lt_marc-matnr
      AND zmonth = lv_date(6).

***抓取当前月发货过账的交货单信息
  CLEAR lv_date.
  CONCATENATE sy-datum(6) '01' INTO lv_date.

  SELECT a~vbeln
         a~wadat_ist
         b~posnr
         b~matnr
         b~werks
         b~lfimg
    INTO CORRESPONDING FIELDS OF TABLE lt_dn_data
    FROM likp AS a
    INNER JOIN lips AS b
    ON a~vbeln = b~vbeln
    INNER JOIN vbuk AS c
    ON a~vbeln = c~vbeln
    FOR ALL ENTRIES IN lt_marc
    WHERE b~matnr = lt_marc-matnr
      AND b~werks = lt_marc-werks
      AND c~wbstk = 'C'
      AND a~lfart IN ('ZLF1','ZLF3')
      AND a~wadat_ist BETWEEN lv_date AND sy-datum.

***抓取库存信息
  SELECT matnr
         werks
         lgort
         labst
         insme
    INTO CORRESPONDING FIELDS OF TABLE lt_mard
    FROM mard
    FOR ALL ENTRIES IN lt_marc
    WHERE matnr = lt_marc-matnr
      AND werks = lt_marc-werks
      AND lgort IN ('1010','1020','3020').

***抓取在制品信息
  SELECT a~aufnr
         a~matnr
         a~dwerk
         a~psmng
         a~wemng
     INTO CORRESPONDING FIELDS OF TABLE lt_afpo
     FROM afpo AS a
     INNER JOIN aufk AS b
     ON a~aufnr = b~aufnr
     INNER JOIN jest AS c
     ON b~objnr = c~objnr
     FOR ALL ENTRIES IN lt_marc
     WHERE a~matnr = lt_marc-matnr
       AND a~dwerk = lt_marc-werks
       AND a~xloek EQ space
       AND c~stat = 'I0002'
       AND c~inact EQ space
      AND b~loekz EQ space.
  .

***抓取未清PO数量
  SELECT a~ebeln
         a~ebelp
         a~werks
         a~matnr
         a~txz01
         b~etenr
         b~eindt
         b~menge
         b~wemng
         a~bpumz
         a~bpumn
    INTO CORRESPONDING FIELDS OF TABLE lt_po_data
    FROM ekpo AS a
    INNER JOIN eket AS b
    ON a~ebeln = b~ebeln
    AND a~ebelp = b~ebelp
    FOR ALL ENTRIES IN lt_marc
    WHERE a~matnr = lt_marc-matnr
      AND a~werks = lt_marc-werks
      AND a~loekz EQ space
      AND a~elikz EQ space
      AND a~pstyp NE '7'.

  LOOP AT lt_po_data.
    lt_po_data-menge =  lt_po_data-menge * lt_po_data-bpumz / lt_po_data-bpumn.
    lt_po_data-wemng =  lt_po_data-wemng * lt_po_data-bpumz / lt_po_data-bpumn.
    "未清数量
    lt_po_data-zwqsl = lt_po_data-menge - lt_po_data-wemng.
    MODIFY lt_po_data.
  ENDLOOP.

***物料描述
  SELECT matnr maktx
    INTO CORRESPONDING FIELDS OF TABLE lt_makt
    FROM makt
    FOR ALL ENTRIES IN lt_marc
    WHERE matnr = lt_marc-matnr.

  SORT lt_makt BY matnr.
  SORT lt_ztsd001c BY matnr.

***读取BPM变更数据
  EXEC SQL.
    CONNECT TO :CNS_BPM
  ENDEXEC.

  CONCATENATE sy-datum(6) '01' INTO LV_DATE_LOW.
  CALL FUNCTION 'FKK_LAST_DAY_OF_MONTH'
    EXPORTING
      day_in            = LV_DATE_LOW
    IMPORTING
      LAST_DAY_OF_MONTH = LV_DATE_high
    EXCEPTIONS
      DAY_IN_NO_DATE    = 1
      OTHERS            = 2.

***BPM相关数据
  TRY.
      EXEC SQL.
        OPEN DBCURSOR FOR
       SELECT ZLSPT_PLM_XQBG.BUSSNO,
              ZLSPT_PLM_XQBG.HTPSDATE,
              ZLSPT_PLM_XQBG_ITEM.MATRN,
              ZLSPT_PLM_XQBG_ITEM.CUSPNO,
              ZLSPT_PLM_XQBG_ITEM.CHANGENUM,
              ZLSPT_PLM_XQBG_ITEM.CHANGEWAY
         FROM ZLSPT_PLM_XQBG
         INNER JOIN ZLSPT_PLM_XQBG_ITEM
         ON ZLSPT_PLM_XQBG.BUSSNO = ZLSPT_PLM_XQBG_ITEM.BUSSNO
          WHERE ZLSPT_PLM_XQBG.HTPSDATE >= :LV_DATE_LOW
            AND ZLSPT_PLM_XQBG.HTPSDATE <= :LV_DATE_HIGH
            AND ( ZLSPT_PLM_XQBG_ITEM.REQ_YJ = 'Y' or ZLSPT_PLM_XQBG_ITEM.REQ_YJ = 'N' )
      ENDEXEC.
    CATCH cx_sy_native_sql_error INTO exec_ref.
      g_errorstr = exec_ref->get_text( ).
      CONCATENATE '读取数据出错,'  g_errorstr INTO g_errorstr.
  ENDTRY.

  DO .
    TRY.
        EXEC SQL.
          FETCH NEXT DBCURSOR INTO
          :GT_ZBPM_ITEM-BUSSNO,
          :GT_ZBPM_ITEM-HTPSDATE,
          :GT_ZBPM_ITEM-MATRN,
          :GT_ZBPM_ITEM-CUSPNO,
          :GT_ZBPM_ITEM-CHANGENUM,
          :GT_ZBPM_ITEM-CHANGEWAY
        ENDEXEC.
        IF sy-subrc EQ 0.
          APPEND gt_zbpm_item .
        ELSE.
          EXIT.
        ENDIF.
      CATCH cx_sy_native_sql_error INTO exec_ref.
        g_errorstr = exec_ref->get_text( ).
        CONCATENATE '读取数据出错,'  g_errorstr INTO g_errorstr.
    ENDTRY.
  ENDDO.
**关闭连接
  EXEC SQL.
    DISCONNECT :CNS_BPM
  ENDEXEC.

  LOOP AT lt_marc.
    gt_out-matnr = lt_marc-matnr.
***物料描述
    READ TABLE lt_makt WITH KEY matnr = lt_marc-matnr BINARY SEARCH.
    IF sy-subrc = 0.
      gt_out-maktx = lt_makt-maktx.
    ENDIF.
***抓取自定义表的安全库存
    SELECT SINGLE eisbe INTO gt_out-eisbe FROM ztpp001 WHERE matnr = gt_out-matnr.
    gt_out-spart = lt_marc-spart.
***本月销售计划
    READ TABLE lt_ztsd001c WITH KEY matnr = lt_marc-matnr BINARY SEARCH.
    IF sy-subrc = 0.
      gt_out-zbyjh = lt_ztsd001c-zbyjh.
    ENDIF.
***本月销售出库数
    LOOP AT lt_dn_data WHERE matnr = lt_marc-matnr AND werks = lt_marc-werks.
      gt_out-zxsck = gt_out-zxsck + lt_dn_data-lfimg.
    ENDLOOP.
***本月销售发货达成率%
    IF gt_out-zbyjh NE 0.
      gt_out-zxsdcl = gt_out-zxsck / gt_out-zbyjh * 100.
    ENDIF.
***库存数
    LOOP AT lt_mard WHERE matnr = lt_marc-matnr AND werks = lt_marc-werks.
      gt_out-zkcs = gt_out-zkcs + lt_mard-labst + lt_mard-insme.
    ENDLOOP.
***在制品数量
    LOOP AT lt_afpo WHERE matnr = lt_marc-matnr AND dwerk = lt_marc-werks.
      gt_out-zzzps = gt_out-zzzps + lt_afpo-psmng - lt_afpo-wemng.
    ENDLOOP.
    LOOP AT lt_po_data WHERE matnr = lt_marc-matnr AND werks = lt_marc-werks.
      gt_out-zzzps = gt_out-zzzps + lt_po_data-zwqsl.
    ENDLOOP.
***获取MRP数据
    REFRESH:lt_mdps,lt_mdez,lt_mdsu.
    CALL FUNCTION 'MD_STOCK_REQUIREMENTS_LIST_API'
      EXPORTING
        matnr                    = lt_marc-matnr
        werks                    = lt_marc-werks
      TABLES
        mdpsx                    = lt_mdps
        mdezx                    = lt_mdez
        mdsux                    = lt_mdsu
      EXCEPTIONS
        material_plant_not_found = 1
        plant_not_found          = 2
        OTHERS                   = 3.
    DELETE lt_mdez WHERE plaab NE '02'.
    LOOP AT lt_mdez WHERE delkz EQ 'BA'.
      gt_out-zzzps = gt_out-zzzps + lt_mdez-mng01.
    ENDLOOP.
***本月欠货数量
    gt_out-zqhsl = gt_out-zbyjh - gt_out-zxsck - gt_out-zkcs.

***抓取需求计划变更数据
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_OUTPUT'
      EXPORTING
        input  = gt_out-matnr
      IMPORTING
        OUTPUT = lv_matnr.
    loop at gt_zbpm_item WHERE matrn = gt_out-matnr or matrn = lv_matnr.
      IF gt_zbpm_item-changeway EQ '减少'.
        gt_zbpm_item-changenum = -1 * gt_zbpm_item-changenum.
      ENDIF.
      gt_out-zxsbg = gt_out-zxsbg + gt_zbpm_item-changenum.
    endloop.
    if gt_out-zbyjh NE 0.
      gt_out-zxsbgl = gt_out-zxsbg / gt_out-zbyjh * 100.
    ENDIF.

    APPEND gt_out.
    CLEAR gt_out.
  ENDLOOP.

  IF s_byqhl[] IS NOT INITIAL.
    DELETE gt_out WHERE zqhsl NOT IN s_byqhl.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_fieldcat .
  mcr_build_fieldcat:'MATNR'    '物料号码'             'MATNR'   'MARC'    ''      '',
                     'MAKTX'    '物料描述'             'MAKTX'   'MAKT'    ''      '',
                     'SPART'    '产品组'               'SPART'   'MARA'    ''      '',
                     'ZBYJH'    '本月销售计划'         ''        ''        'P'     '15',
                     'ZXSCK'    '本月销售出库数'       ''        ''        'P'     '15',
                     'ZXSDCL'   '本月销售发货达成率%'  ''        ''        'P'     '15',
                     'ZXSBG'    '本月销售计划变更数'   ''        ''        'P'     '15',
                     'ZXSBGL'   '本月销售计划变更率'   ''        ''        'P'     '15',
                     'ZKCS'     '库存数'               ''        ''        'P'     '15',
                     'EISBE'    '安全库存'             ''        ''        'P'     '15',
                     'ZZZPS'    '在制品数'             ''        ''        'P'     '15',
                     'ZQHSL'    '欠货数量'             ''        ''        'P'     '15'.

  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_output_data .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
*     I_INTERFACE_CHECK  = ' '
*     I_BYPASSING_BUFFER =
*     I_BUFFER_ACTIVE    =
      i_callback_program = sy-repid
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME   =
*     I_BACKGROUND_ID    = ' '
*     I_GRID_TITLE       =
*     I_GRID_SETTINGS    =
      is_layout_lvc      = gs_layout
      it_fieldcat_lvc    = gt_fcat[]
*     IT_EXCLUDING       =
*     IT_SPECIAL_GROUPS_LVC             =
*     IT_SORT_LVC        =
*     IT_FILTER_LVC      =
*     IT_HYPERLINK       =
*     IS_SEL_HIDE        =
      i_default          = 'X'
      i_save             = 'A'
*     IS_VARIANT         =
*     IT_EVENTS          =
*     IT_EVENT_EXIT      =
*     IS_PRINT_LVC       =
*     IS_REPREP_ID_LVC   =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE  = 0
*     I_HTML_HEIGHT_TOP  =
*     I_HTML_HEIGHT_END  =
*     IT_ALV_GRAPHICS    =
*     IT_EXCEPT_QINFO_LVC               =
*     IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab           = gt_out[]
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
