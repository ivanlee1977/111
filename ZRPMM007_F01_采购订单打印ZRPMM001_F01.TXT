*&---------------------------------------------------------------------*
*&  包含                ZRPMM007_F01
*&---------------------------------------------------------------------*
FORM frm_show."ALV显示界面

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'SET_PF_STATUS'
      i_callback_user_command  = 'ALV_USER_COMMAND'
      is_layout                = gs_layout
      it_fieldcat              = gt_fcat[]
    TABLES
      t_outtab                 = gt_mm[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
           WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.

FORM set_pf_status USING rt_extab TYPE slis_t_extab.

  DATA: wa_extab TYPE slis_extab.

  SET PF-STATUS '0100' EXCLUDING rt_extab.

ENDFORM.                    "set_pf_status1

FORM alv_user_command USING r_ucomm LIKE sy-ucomm  rs_selfield TYPE slis_selfield.



  r_ucomm = sy-ucomm.
  save_ok =  r_ucomm .
  CASE r_ucomm.

    WHEN 'ZPRINT'.
      PERFORM frm_output_data.
  ENDCASE.


ENDFORM.                    "alv_user_command

*&---------------------------------------------------------------------*
*&      Form  FRM_GETDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_getdata .

  CLEAR:gt_mm[].
  SELECT
       a~banfn
       a~matnr
       a~txz01
       b~plifz
       b~bstmi
       a~menge
       a~meins
       a~lfdat

       INTO CORRESPONDING FIELDS OF TABLE gt_mm
        FROM eban AS a
        INNER  JOIN marc AS b ON a~matnr EQ b~matnr AND a~werks = b~werks

        WHERE a~werks = p_werks
         AND  a~banfn IN s_banfn
         AND  a~bsart IN s_bsart
         AND  b~ekgrp IN s_ekgrp
         AND  a~matkl IN s_matkl
         AND  a~lfdat IN s_lfdat
         AND  a~badat IN s_badat
         AND  b~plifz IN s_plifz
        AND   a~frgzu EQ 'X'
         AND  a~loekz NE 'X'
.
  DATA l_i TYPE i .
  l_i = 1.
  LOOP AT gt_mm.
*    IF  gt_mm-plifz  LE s_plifz-low .
*      DELETE gt_mm.
*      CONTINUE.
*    ENDIF.
*    IF gt_mm-plifz GE s_plifz-high AND   s_plifz-high <> 0.
*      DELETE gt_mm.
*      CONTINUE.
*    ENDIF.

    gt_mm-znum = l_i.
    l_i = l_i + 1.
    MODIFY gt_mm.
  ENDLOOP.

ENDFORM.

FORM frm_getfact .
  g_fieldfcat:
    'ZNUM' '序号' '' '',
    'BANFN' '采购申请' 'BANFN' 'EBAN' ,
    'MATNR' '物料编码' 'MATNR' 'EBAN' ,
    'TXZ01' '型号/规格' 'TXZ01' 'EBAN' ,
    'PLIFZ' '采购周期' 'PLIFZ' 'MARC' ,
    'BSTMI' '最小订单' 'BSTMI' 'MARC' ,
    'MEINS' '单位' 'MEINS' 'EBAN' ,
    'MENGE' '下单数量' 'MENGE' 'EBAN' ,
    'LFDAT' '希望交期' 'LFDAT' 'EBAN'
  .
  gs_layout-colwidth_optimize = 'X'.
*  gs_layout-box_fieldname = 'CHK'.
*  gs_layout-box_tabname = 'gt_mm'.
*  gs_layout-edit = 'X'.
  gs_layout-zebra = 'X'.

ENDFORM.

FORM frm_output_data .
  DATA:ls_key   TYPE wwwdatatab,
       lv_subrc TYPE sy-subrc.
  DATA lv_file LIKE rlgrap-filename.

  DATA: fullpath    TYPE string,
        filename    TYPE string,
        path        TYPE string,
        user_action TYPE i,
        encoding    TYPE abap_encoding.

  CALL METHOD cl_gui_frontend_services=>file_save_dialog
    EXPORTING
      window_title      = '下载到本地文件'
      default_extension = 'XLS'           "缺省文件类型
      default_file_name = '物料申购计划表.XLS'
      file_filter       = 'Excel 文件 (*.XLS)|*.XLS;*.XLSX|'
      with_encoding     = 'X'
      initial_directory = 'D:\'
    CHANGING
      filename          = filename    "获得用户输入文件名
      path              = path        "获得用户所选路径
      fullpath          = fullpath    "路径加文件名
      user_action       = user_action
      file_encoding     = encoding.

*  CONCATENATE 'C:\MM\' sy-title '-'   sy-datum '.xls' INTO lv_file.
  MOVE fullpath TO lv_file.

  ls_key-relid = 'MI'.
  ls_key-objid = gcst_excel_template.
  CALL FUNCTION 'DOWNLOAD_WEB_OBJECT'
    EXPORTING
      key         = ls_key
      destination = lv_file
    IMPORTING
      rc          = lv_subrc.
  IF lv_subrc <> 0.
    MESSAGE '下载模板出错，请检查，谢谢' TYPE 'E'.
    EXIT.
  ENDIF.


***填充EXCEL数据
  PERFORM frm_filldata_excel USING lv_file.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_FILLDATA_EXCEL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LV_FILE  text
*----------------------------------------------------------------------*
FORM frm_filldata_excel  USING iv_file TYPE rlgrap-filename.
*******数据定义*******
  DATA:lo_excel     TYPE ole2_object,
       lo_workbooks TYPE ole2_object,
       lo_workbook  TYPE ole2_object,
       rows         TYPE ole2_object,
       lo_sheet     TYPE ole2_object,
       lo_range     TYPE ole2_object,
       lo_cell      TYPE ole2_object,
       lo_cell1     TYPE ole2_object.
  DATA lv_file LIKE rlgrap-filename.

  DATA lv_row TYPE i.
  DATA lv_col TYPE i.

  DEFINE mac_fill_cell.
    CALL METHOD OF lo_sheet 'CELLS' = lo_cell
      EXPORTING
        #1 = &1
        #2 = &2.
    SET PROPERTY OF lo_cell 'VALUE' = &3.
  END-OF-DEFINITION.

  DATA:lv_srzb  TYPE p DECIMALS 2,
       lv_ml    TYPE p DECIMALS 2,
       lv_ml_hj TYPE p DECIMALS 2,
       lv_mlzb  TYPE p DECIMALS 2.
  DATA:ls_data LIKE LINE OF gt_mm.

  DATA:lv_text_ny TYPE string,
       lv_text_dw TYPE string.
  DATA:lv_butxt LIKE t001-butxt.
*******程序主体*******

*填充excel
  CREATE OBJECT lo_excel 'EXCEL.APPLICATION'.
  CALL METHOD OF lo_excel 'WORKBOOKS' = lo_workbooks.
  CALL METHOD OF lo_workbooks 'OPEN' = lo_workbook EXPORTING #1 = iv_file.
  CALL METHOD OF lo_workbook 'WORKSHEETS' = lo_sheet EXPORTING #1 = 1.

***年月
*  IF s_perde-high IS INITIAL.
*    CONCATENATE p_gjahr '年' s_perde-low+1(2) '月' INTO lv_text_ny.
*  ELSE.
*    CONCATENATE p_gjahr '年' s_perde-low+1(2) '月 到 ' p_gjahr '年' s_perde-high+1(2) '月' INTO lv_text_ny.
*  ENDIF.
  DATA l_datum TYPE char10.
  CALL FUNCTION 'CONVERT_DATE_TO_EXTERNAL'
    EXPORTING
      date_internal = sy-datum
    IMPORTING
      date_external = l_datum.

  CONCATENATE '制单日期:' l_datum INTO lv_text_ny.
  mac_fill_cell 3 5 lv_text_ny.
  IF s_plifz-high < 24  OR ( s_plifz-low < 24 AND s_plifz-high IS INITIAL ).
    mac_fill_cell 4 1  '类别：□长周期物料申购■短周期物料申购：'.
  ENDIF.
  DATA l_meins TYPE char3.
  lv_row = 7.
  LOOP AT gt_mm.
    IF lv_row >= 20.
      CALL METHOD OF lo_sheet 'Rows' = lo_range EXPORTING #1 = lv_row.
      CALL METHOD OF lo_range 'Copy'.
      CALL METHOD OF lo_sheet 'Rows' = lo_range EXPORTING #1 = lv_row.
      CALL METHOD OF lo_range 'Insert'.
    ENDIF.
    mac_fill_cell lv_row 1  gt_mm-znum.
    mac_fill_cell lv_row 2  gt_mm-banfn.
    mac_fill_cell lv_row 3  gt_mm-matnr.
    mac_fill_cell lv_row 4  gt_mm-txz01.
    mac_fill_cell lv_row 5  gt_mm-plifz.
    mac_fill_cell lv_row 6  gt_mm-bstmi.

    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
      EXPORTING
        input    = gt_mm-meins
        language = sy-langu
      IMPORTING
        output   = l_meins.
    mac_fill_cell lv_row 7  l_meins.

    mac_fill_cell lv_row 8  gt_mm-menge.
    mac_fill_cell lv_row 9  gt_mm-lfdat.
    lv_row = lv_row + 1.

  ENDLOOP.

  CALL METHOD OF lo_sheet 'CELLS' = lo_cell EXPORTING #1 = 1 #2 = 1.
  CALL METHOD OF lo_cell 'SELECT'.
  SET PROPERTY OF lo_excel 'CutCopyMode' = 0.

  CALL METHOD OF lo_workbook 'SAVE'.
  SET PROPERTY OF lo_excel 'VISIBLE' = 1.
  FREE OBJECT:lo_excel,lo_workbooks,lo_workbook,lo_sheet,lo_range,lo_cell.
ENDFORM.
