*&---------------------------------------------------------------------*
*&  包含                ZRPCO026F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_data .
  DATA: lv_matnr TYPE mara-matnr,lv_stprs TYPE mbew-stprs,lv_peinh TYPE mbew-peinh .
  DATA lt_out LIKE TABLE OF gt_out WITH HEADER LINE.
  DATA lt_mbew LIKE TABLE OF mbew WITH HEADER LINE.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_out FROM marc
    WHERE matnr IN s_matnr
    AND werks IN s_werks.
***计算其它字段值
  LOOP AT lt_out.
    PERFORM frm_getbom USING lt_out-matnr .
  ENDLOOP.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_mbew FROM mbew
    FOR ALL ENTRIES IN gt_out
    WHERE matnr = gt_out-zmatnr
    AND bwkey = 1000.
  SORT lt_mbew BY matnr .
  LOOP AT gt_out .
    IF gt_out-zmatnr+10(1) = 7.
      DELETE gt_out.
      CONTINUE.
    ENDIF.
    IF gt_out-zmaktx = '' AND gt_out-zmatnr = ''.
      DELETE gt_out.
      CONTINUE.
    ENDIF.
    SELECT SINGLE maktx INTO gt_out-maktx FROM makt WHERE matnr = gt_out-matnr AND spras = 1.
    SELECT SINGLE maktx INTO gt_out-zmaktx FROM makt WHERE matnr = gt_out-zmatnr AND spras = 1.
*    SELECT SINGLE meins INTO gt_out-meins FROM mara WHERE matnr = gt_out-zmatnr.
    IF gt_out-postp = 'L'.
      PERFORM  frm_unit_conversion USING gt_out-zmatnr CHANGING gt_out-menge gt_out-meins.
    ENDIF.

    READ TABLE lt_mbew WITH KEY matnr = gt_out-zmatnr.
    IF sy-subrc = 0 .
      gt_out-zdj = lt_mbew-stprs / lt_mbew-peinh.
    ENDIF.
    gt_out-zzj = gt_out-zdj * gt_out-menge.
    MODIFY gt_out.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_fieldcat .
  mcr_build_fieldcat:
                     'MATNR'     '物料名称'       'MATNR'     'MAKT',
                     'MAKTX'     '物料描述'       'MAKTX'     'MAKT',
                     'ZMATNR'     '子项物料名称'       'MATNR'     'MAKT',
                     'ZMAKTX'     '子项物料描述'       'MAKTX'     'MAKT',
                     'POSTP'     '子项类别'       ''     '',
                     'MENGE'     '组件数量'       'MENGE'     'STPO',
                     'MEINS'     '单位'       'MEINS'     'STPO',
                     'ZDJ'     '组件单价'       ''     '',
                     'ZZJ'     '组件总价'       ''     ''.
  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_output_data .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
*     I_INTERFACE_CHECK  = ' '
*     I_BYPASSING_BUFFER =
*     I_BUFFER_ACTIVE    =
      i_callback_program = sy-repid
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME   =
*     I_BACKGROUND_ID    = ' '
*     I_GRID_TITLE       =
*     I_GRID_SETTINGS    =
      is_layout_lvc      = gs_layout
      it_fieldcat_lvc    = gt_fcat[]
*     IT_EXCLUDING       =
*     IT_SPECIAL_GROUPS_LVC             =
*     IT_SORT_LVC        =
*     IT_FILTER_LVC      =
*     IT_HYPERLINK       =
*     IS_SEL_HIDE        =
      i_default          = 'X'
      i_save             = 'A'
*     IS_VARIANT         =
*     IT_EVENTS          =
*     IT_EVENT_EXIT      =
*     IS_PRINT_LVC       =
*     IS_REPREP_ID_LVC   =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE  = 0
*     I_HTML_HEIGHT_TOP  =
*     I_HTML_HEIGHT_END  =
*     IT_ALV_GRAPHICS    =
*     IT_EXCEPT_QINFO_LVC               =
*     IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab           = gt_out[]
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GETBOM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_OUT_MATNR  text
*----------------------------------------------------------------------*
FORM frm_getbom  USING    p_matnr.
  DATA:lt_mast LIKE mast OCCURS 0 WITH HEADER LINE.
  DATA:ls_cstmat     LIKE cstmat,
       lt_stpo       LIKE stpox OCCURS 0 WITH HEADER LINE,
       lt_stpo1      LIKE stpox OCCURS 0 WITH HEADER LINE,
       lt_matcat     LIKE cscmat OCCURS 0 WITH HEADER LINE,
       lt_stpo_total LIKE cscmat OCCURS 0 WITH HEADER LINE,
       lt_stpu       LIKE stpu OCCURS 0 WITH HEADER LINE.
  DATA :lv_objek LIKE ausp-objek,lv TYPE num.
  DATA: ls_class      LIKE TABLE OF sclass WITH HEADER LINE,
        ls_objectdata LIKE TABLE OF clobjdat WITH HEADER LINE.

***抓取满足条件的BOM数据
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE lt_mast
    FROM mast AS a    INNER JOIN stko AS b    ON a~stlnr = b~stlnr    AND a~stlal = b~stlal
    WHERE a~matnr = p_matnr
      AND a~werks = '1000'
      AND b~stlty = 'M'.

  IF lt_mast[] IS INITIAL.
    EXIT.
  ENDIF.

  READ TABLE lt_mast INDEX 1.
  PERFORM frm_explo_bom TABLES lt_stpo lt_matcat USING lt_mast-matnr lt_mast-werks 'X' lt_mast-stlal CHANGING ls_cstmat.
*  SORT lt_stpo BY idnrk.
  IF lt_stpo[] IS NOT INITIAL.

*    LOOP AT lt_stpo WHERE idnrk <> ''  .
    LOOP AT lt_stpo.
*      IF lt_stpo-idnrk+10(1) <> 6 OR lt_stpo-idnrk+10(1) <> 7.
      gt_out-matnr = p_matnr.
      gt_out-postp = lt_stpo-postp.
      gt_out-zmatnr = lt_stpo-idnrk.
      gt_out-menge = lt_stpo-menge.
      gt_out-meins = lt_stpo-meins.
      IF gt_out-zmatnr = ''.
        gt_out-zmatnr = lt_stpo-potx1(8).
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            input  = gt_out-zmatnr
          IMPORTING
            output = gt_out-zmatnr.
        gt_out-zmaktx = lt_stpo-potx1.
        gt_out-menge = lt_stpo-mnglg.
      ENDIF.
*        APPEND gt_out.
      COLLECT gt_out.
*      ELSEIF lt_stpo-idnrk+10(2) <> 75.
*        PERFORM frm_explo_bom TABLES lt_stpo1 lt_matcat USING lt_stpo-idnrk lt_mast-werks 'X' lt_mast-stlal CHANGING ls_cstmat.
*      ENDIF.
    ENDLOOP.
  ENDIF.
  CLEAR lt_mast.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_EXPLO_BOM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_STPO  text
*      -->P_LT_MATCAT  text
*      -->P_LT_MAST_MATNR  text
*      -->P_LT_MAST_WERKS  text
*      -->P_1259   text
*      -->P_LT_MAST_STLAL  text
*      <--P_LS_CSTMAT  text
*----------------------------------------------------------------------*
FORM frm_explo_bom  TABLES   lt_stpo STRUCTURE stpox
                             lt_matcat STRUCTURE cscmat
                     USING    u_matnr LIKE mara-matnr
                              u_werks LIKE marc-werks
                              u_mehrs TYPE c
                              u_stlal LIKE mast-stlal
                    CHANGING ls_cstmat LIKE cstmat.
  REFRESH:lt_stpo,lt_matcat.
  CLEAR:ls_cstmat.
  CALL FUNCTION 'CS_BOM_EXPL_MAT_V2'
    EXPORTING
      capid                 = 'ZP02'
      datuv                 = sy-datum
      mehrs                 = u_mehrs
      mtnrv                 = u_matnr
      werks                 = u_werks
      stlal                 = u_stlal
    IMPORTING
      topmat                = ls_cstmat
    TABLES
      matcat                = lt_matcat
      stb                   = lt_stpo
    EXCEPTIONS
      alt_not_found         = 1
      call_invalid          = 2
      material_not_found    = 3
      missing_authorization = 4
      no_bom_found          = 5
      no_plant_data         = 6
      no_suitable_bom_found = 7
      conversion_error      = 8
      OTHERS                = 9.

ENDFORM.

*----------------------------------------------------------------------*
*      -->VALUE(PV_MATNR)  物料
*      -->VALUE(CH_MENGE)  待转换数量
*      -->VALUE(CH_MEINS)  待转换计量单位
*----------------------------------------------------------------------*
FORM frm_unit_conversion USING VALUE(pv_matnr)
                      CHANGING VALUE(ch_menge) VALUE(ch_meins) .

  DATA :
    lv_in_meins  TYPE mara-meins,
    lv_out_meins TYPE mara-meins,
    lv_in_menge  TYPE menge_d,
    lv_out_menge TYPE menge_d.

  CLEAR : lv_in_meins,lv_out_meins, lv_in_menge, lv_out_menge.

* 取出物料基本计量单位
  SELECT SINGLE meins INTO lv_out_meins
    FROM mara
    WHERE matnr = pv_matnr.

  lv_in_menge = ch_menge.
  lv_in_meins = ch_meins.

  CALL FUNCTION 'ZFM_UT_UNIT_CONVERSION'
    EXPORTING
      ip_matnr     = pv_matnr         " 物料
      ip_meins     = lv_out_meins     " 物料计量单位
      ip_unit_in   = lv_in_meins      " 待转换 物料计量单位
      ip_unit_out  = lv_out_meins      " 转换为 物料计量单位
      ip_value_in  = lv_in_menge
    IMPORTING
      ep_value_out = lv_out_menge
    EXCEPTIONS
      overflow     = 1
      OTHERS       = 2.

  IF sy-subrc = 0.
    ch_menge = lv_out_menge.
  ENDIF.
  ch_meins = lv_out_meins.

ENDFORM.                    "FRM_UNIT_CONVERSION
