*&---------------------------------------------------------------------*
*&  包含                ZRPMM009F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_INITIAL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_initial_data .
*******数据定义*******
  INCLUDE <icon>.
  DATA ls_functxt TYPE smp_dyntxt.
  DATA:gt_exbut TYPE TABLE OF sy-ucomm.
*******初始化*******
*******程序主体*******
  "屏幕工具栏中按饼
  "启用自定义工具
  CLEAR ls_functxt.
  ls_functxt-icon_text = '模板下载'."'Download Template'.
  ls_functxt-icon_id   = '@49@'.
  ls_functxt-quickinfo =  '模板下载'.
  sscrfields-functxt_01 = ls_functxt.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_FILENAME_FIND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_P_FILE  text
*----------------------------------------------------------------------*
FORM frm_filename_find   CHANGING xc_file.
  CALL FUNCTION 'WS_FILENAME_GET'
    EXPORTING
      def_filename     = xc_file
      def_path         = 'C:\'
      mask             = ',*.XLS.'
      mode             = 'O'
      title            = '文件名'
    IMPORTING
      filename         = xc_file
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_DOWNLOAD_TEMPLATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0036   text
*      <--P_P_FILE  text
*----------------------------------------------------------------------*
FORM frm_download_template  USING u_objid LIKE wwwdatatab-objid CHANGING ic_file.
  DATA:l_path   TYPE string.

  CALL METHOD zcl_ole_excel=>download_templet
    EXPORTING
      iv_objid        = u_objid
      iv_win_title    = '请指定下载路径'
      iv_df_extension = 'XLS'
    IMPORTING
      ev_fullpath     = l_path.

  CALL METHOD cl_gui_frontend_services=>execute
    EXPORTING
      document = l_path
    EXCEPTIONS
      OTHERS   = 10.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_upload_data .
  DATA:ls_out LIKE LINE OF gt_out.
***读取EXCEL数据
  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename                = p_file
      i_begin_col             = 1
      i_begin_row             = 2
      i_end_col               = 30
      i_end_row               = 99999
    TABLES
      intern                  = gt_upload
    EXCEPTIONS
      inconsistent_parameters = 1
      upload_ole              = 2
      OTHERS                  = 3.

  LOOP AT gt_upload ASSIGNING <fs_data>.
    AT NEW row.
      CLEAR:ls_out.
    ENDAT.
    CASE <fs_data>-col.
      WHEN '1'.   "物料号码
        ls_out-matnr = <fs_data>-value.
      WHEN '2'.   "工厂
        ls_out-werks = <fs_data>-value.
      WHEN '3'.   "生效日期从
        ls_out-vdatu = <fs_data>-value.
      WHEN '4'.  "生效日期到
        ls_out-bdatu = <fs_data>-value.
      WHEN '5'.  "供应商
        ls_out-lifnr = <fs_data>-value.
      WHEN '6'.  "采购组织
        ls_out-ekorg = <fs_data>-value.
      WHEN '7'.  "标识：固定
        ls_out-flifn = <fs_data>-value.
      WHEN '8'. "冻结
        ls_out-notkz = <fs_data>-value.
      WHEN '9'. "MRP
        ls_out-autet = <fs_data>-value.
      WHEN '10'."MPN
        ls_out-ematn = <fs_data>-value.
      WHEN OTHERS.
    ENDCASE.

    AT END OF row.
***check data
      PERFORM frm_check_data CHANGING ls_out.
      APPEND ls_out TO gt_out.
      CLEAR ls_out.
    ENDAT.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_data CHANGING ls_out LIKE gt_out.
  DEFINE mcr_add_msg.
    IF &1 IS INITIAL.
      &1 = &2.
    ELSE.
      CONCATENATE &1 &2 INTO &1 SEPARATED BY ','.
    ENDIF.
  END-OF-DEFINITION.

***检查物料
  IF ls_out-matnr IS INITIAL.
    mcr_add_msg:ls_out-zmsg '请输入物料'.
  ELSE.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = ls_out-matnr
      IMPORTING
        output       = ls_out-matnr
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.
    SELECT SINGLE * FROM mara WHERE matnr = ls_out-matnr.
    IF sy-subrc NE 0.
      mcr_add_msg:ls_out-zmsg '物料不存在'.
    ENDIF.
  ENDIF.
***检查工厂
  IF ls_out-werks IS INITIAL.
    mcr_add_msg:ls_out-zmsg '请输入工厂'.
  ELSE.
    SELECT SINGLE * FROM t001w WHERE werks = ls_out-werks.
    IF sy-subrc NE 0.
      mcr_add_msg:ls_out-zmsg '工厂不存在'.
    ENDIF.
  ENDIF.

***检查生效日期
  IF ls_out-vdatu IS INITIAL.
    mcr_add_msg:ls_out-zmsg '请输入生效日期从'.
  ELSE.
    CALL FUNCTION 'DATE_CHECK_PLAUSIBILITY'
      EXPORTING
        date                      = ls_out-vdatu
      EXCEPTIONS
        plausibility_check_failed = 1
        OTHERS                    = 2.
    IF sy-subrc <> 0.
      mcr_add_msg:ls_out-zmsg '请输入生效日期从格式错误'.
    ENDIF.
  ENDIF.

***检查生效日期到
  IF ls_out-bdatu IS INITIAL.
    mcr_add_msg:ls_out-zmsg '请输入生效日期到'.
  ELSE.
    CALL FUNCTION 'DATE_CHECK_PLAUSIBILITY'
      EXPORTING
        date                      = ls_out-bdatu
      EXCEPTIONS
        plausibility_check_failed = 1
        OTHERS                    = 2.
    IF sy-subrc <> 0.
      mcr_add_msg:ls_out-zmsg '请输入生效日期到格式错误'.
    ENDIF.
  ENDIF.

***供应商
  IF ls_out-lifnr IS INITIAL.
    mcr_add_msg:ls_out-zmsg '请输入供应商'.
  ELSE.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = ls_out-lifnr
      IMPORTING
        output = ls_out-lifnr.
    SELECT SINGLE * FROM lfa1 WHERE lifnr = ls_out-lifnr.
    IF sy-subrc NE 0.
      mcr_add_msg:ls_out-zmsg '供应商不存在'.
    ENDIF.
  ENDIF.

***采购组织
  IF ls_out-ekorg  IS INITIAL.
    mcr_add_msg:ls_out-zmsg '请输入采购组织'.
  ELSE.
    SELECT SINGLE * FROM t024e WHERE ekorg = ls_out-ekorg.
    IF sy-subrc NE 0.
      mcr_add_msg:ls_out-zmsg '采购组织不存在'.
    ENDIF.
  ENDIF.

  IF ls_out-zmsg IS NOT INITIAL.
    ls_out-zicon = icon_led_red.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_fieldcat .
  mcr_build_fieldcat: 'ZICON'   '状态'         ''        ''      'C'  '30',
                      'ZMSG'    '消息'         ''        ''      'C'  '50',
                      'MATNR'   '物料号码'     'MATNR'   'EORD'  ''   '',
                      'WERKS'   '工厂'         'WERKS'   'EORD'  ''   '',
                      'VDATU'   '生效日期从'   'VDATU'   'EORD'  ''   '',
                      'BDATU'   '生效日期到'   'BDATU'   'EORD'  ''   '',
                      'LIFNR'   '供应商'       'LIFNR'   'EORD'  ''   '',
                      'EKORG'   '采购组织'     'EKORG'   'EORD'  ''   '',
                      'FLIFN'   '固定'         'FLIFN'   'EORD'  ''   '',
                      'NOTKZ'   '冻结'         'NOTKZ'   'EORD'  ''   '',
                      'AUTET'   'MRP'          'AUTET'   'EORD'  ''   '',
                      'EMATN'   'MPN'          'EMATN'   'EORD'  ''   ''.

  READ TABLE gt_out WITH KEY zicon = icon_led_red.
  IF sy-subrc NE 0.
    LOOP AT gt_fcat WHERE fieldname = 'ZICON' OR fieldname = 'ZMSG'.
      gt_fcat-tech = 'X'.
      MODIFY gt_fcat.
    ENDLOOP.
  ENDIF.
  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra = 'X'.
  gs_layout-no_toolbar = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_output_data .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
*     I_INTERFACE_CHECK        = ' '
*     I_BYPASSING_BUFFER       =
*     I_BUFFER_ACTIVE          =
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'FRM_PF_STATUS'
      i_callback_user_command  = 'FRM_USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE   = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME         =
*     I_BACKGROUND_ID          = ' '
*     I_GRID_TITLE             =
*     I_GRID_SETTINGS          =
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat[]
*     IT_EXCLUDING             =
*     IT_SPECIAL_GROUPS_LVC    =
*     IT_SORT_LVC              =
*     IT_FILTER_LVC            =
*     IT_HYPERLINK             =
*     IS_SEL_HIDE              =
      i_default                = 'X'
      i_save                   = 'A'
*     IS_VARIANT               =
*     IT_EVENTS                =
*     IT_EVENT_EXIT            =
*     IS_PRINT_LVC             =
*     IS_REPREP_ID_LVC         =
*     I_SCREEN_START_COLUMN    = 0
*     I_SCREEN_START_LINE      = 0
*     I_SCREEN_END_COLUMN      = 0
*     I_SCREEN_END_LINE        = 0
*     I_HTML_HEIGHT_TOP        =
*     I_HTML_HEIGHT_END        =
*     IT_ALV_GRAPHICS          =
*     IT_EXCEPT_QINFO_LVC      =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER  =
*     ES_EXIT_CAUSED_BY_USER   =
    TABLES
      t_outtab                 = gt_out[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_PF_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_pf_status USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'PF_1000' .
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_USER_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_user_command USING r_ucomm LIKE sy-ucomm
                            rs_selfield TYPE slis_selfield..
  DATA:lv_grid TYPE REF TO cl_gui_alv_grid.

  rs_selfield-refresh = 'X'.
  rs_selfield-col_stable = 'X'.
  rs_selfield-row_stable = 'X'.

  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = lv_grid.

  CASE r_ucomm.
    WHEN 'ZUPLOAD'.  "导入数据
      PERFORM frm_create_source_list_data.
      PERFORM frm_refresh_display USING lv_grid.
    WHEN OTHERS.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_CREATE_SOURCE_LIST_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_create_source_list_data .
  DATA:lv_msg   TYPE string,
       lv_index LIKE sy-tabix.
  DATA:lv_mprof LIKE mara-mprof.

  READ TABLE gt_out WITH KEY zicon = icon_led_red.
  IF sy-subrc = 0 AND gv_flag IS INITIAL.
    MESSAGE '上传数据存在错误，请先修正' TYPE 'I'.
    EXIT.
  ENDIF.

  gv_flag = 'X'.

  LOOP AT gt_out WHERE zicon NE icon_led_green.
    lv_index = sy-tabix.

    PERFORM bdc_dynpro      USING 'SAPLMEOR' '0200'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'EORD-MATNR'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '/00'.
    PERFORM bdc_field       USING 'EORD-MATNR'
                                  gt_out-matnr.
    PERFORM bdc_field       USING 'EORD-WERKS'
                                  gt_out-werks.
    PERFORM bdc_dynpro      USING 'SAPLMEOR' '0205'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'EORD-VDATU(01)'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=NS'.
    PERFORM bdc_dynpro      USING 'SAPLMEOR' '0205'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'RM06W-FESKZ(02)'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '/00'.
    PERFORM bdc_field       USING 'EORD-VDATU(02)'
                                  gt_out-vdatu.
    PERFORM bdc_field       USING 'EORD-BDATU(02)'
                                  gt_out-bdatu.
    PERFORM bdc_field       USING 'EORD-LIFNR(02)'
                                  gt_out-lifnr.
    PERFORM bdc_field       USING 'EORD-EKORG(02)'
                                  gt_out-ekorg.
    PERFORM bdc_field       USING 'RM06W-FESKZ(02)'
                                  gt_out-flifn.
    PERFORM bdc_field       USING 'EORD-NOTKZ(02)'
                                  gt_out-notkz.
    PERFORM bdc_field       USING 'EORD-AUTET(02)'
                                  gt_out-autet.
    CLEAR lv_mprof.
    SELECT SINGLE mprof INTO lv_mprof FROM mara WHERE matnr = gt_out-matnr.
    IF lv_mprof IS NOT INITIAL.
      PERFORM bdc_field       USING 'EORD-EMATN(02)'
                                    gt_out-ematn.
    ENDIF.
    PERFORM bdc_dynpro      USING 'SAPLMEOR' '0205'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=BU'.
    CALL TRANSACTION 'ME01' USING bdcdata MODE gv_mode UPDATE 'L' MESSAGES INTO messtab.
    LOOP AT messtab WHERE msgtyp = 'E' OR msgtyp = 'A'.
      EXIT.
    ENDLOOP.
    IF sy-subrc = 0.
      gt_out-zicon = icon_led_red.
      LOOP AT messtab WHERE msgtyp = 'E' OR msgtyp = 'A'.
        CLEAR lv_msg.
        CALL FUNCTION 'MESSAGE_TEXT_BUILD'
          EXPORTING
            msgid               = messtab-msgid
            msgnr               = messtab-msgnr
            msgv1               = messtab-msgv1
            msgv2               = messtab-msgv2
            msgv3               = messtab-msgv3
            msgv4               = messtab-msgv4
          IMPORTING
            message_text_output = lv_msg.
        IF gt_out-zmsg IS INITIAL.
          gt_out-zmsg =  lv_msg.
        ELSE.
          CONCATENATE gt_out-zmsg  lv_msg INTO gt_out-zmsg .
        ENDIF.
      ENDLOOP.
    ELSE.
      gt_out-zicon = icon_led_green.
      gt_out-zmsg = '导入成功'.
    ENDIF.
    MODIFY gt_out INDEX lv_index.
    REFRESH:bdcdata,messtab.
  ENDLOOP.
ENDFORM.

*----------------------------------------------------------------------*
*        Start new screen                                              *
*----------------------------------------------------------------------*
FORM bdc_dynpro USING program dynpro.
  CLEAR bdcdata.
  bdcdata-program  = program.
  bdcdata-dynpro   = dynpro.
  bdcdata-dynbegin = 'X'.
  APPEND bdcdata.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM bdc_field USING fnam fval.
*  IF FVAL <> NODATA.
  CLEAR bdcdata.
  bdcdata-fnam = fnam.
  bdcdata-fval = fval.
  APPEND bdcdata.
*  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_REFRESH_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LV_GRID  text
*----------------------------------------------------------------------*
FORM frm_refresh_display  USING  u_grid TYPE REF TO cl_gui_alv_grid.
  LOOP AT gt_fcat WHERE fieldname = 'ZICON' OR fieldname = 'ZMSG'.
    gt_fcat-tech = space.
    MODIFY gt_fcat.
  ENDLOOP.

  CALL METHOD u_grid->set_frontend_fieldcatalog
    EXPORTING
      it_fieldcatalog = gt_fcat[].

  CALL METHOD u_grid->set_frontend_layout
    EXPORTING
      is_layout = gs_layout.
ENDFORM.
