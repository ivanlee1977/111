*&---------------------------------------------------------------------*
*&  包含                ZRPFI025_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_AUTHORITY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_authority .
  IF p_bukrs IS NOT INITIAL.
    AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
                  ID 'BUKRS' FIELD p_bukrs
                  ID 'ACTVT' FIELD '03'.
    IF sy-subrc <> 0.
      MESSAGE '没有该公司的查看权限！' TYPE 'E'.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .
  DATA:lv_belnr LIKE bkpf-belnr.

  SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_alv
      FROM zficotfkt
      WHERE zgsdm = p_bukrs
        AND zskrq IN s_zskrq
        AND lifnr IN s_lifnr
        AND zdjhm IN s_zdjhm
        AND zdjzt IN s_zdjzt
        AND zhryh IN s_hryh.
  SORT gt_alv BY zdjhm.
  IF p_zskfs IS NOT INITIAL.
    DELETE gt_alv WHERE zskfs NE p_zskfs.
  ENDIF.
  IF p_zbb IS NOT INITIAL.
    DELETE gt_alv WHERE zbb NE p_zbb.
  ENDIF.
  IF p_zhkr IS NOT INITIAL.
    DELETE gt_alv WHERE zhkr NE p_zhkr.
  ENDIF.
  IF p_zskze IS NOT INITIAL.
    DELETE gt_alv WHERE zskze NE p_zskze.
  ENDIF.


  LOOP AT gt_alv INTO gs_alv.
    CASE gs_alv-zdjzt.
      WHEN '1'.
        gs_alv-txt = '已创建'.
      WHEN '2'.
        gs_alv-txt = '已审核'.
      WHEN '3'.
        gs_alv-txt = '已过账'.
    ENDCASE.
    CASE gs_alv-zskfs.
      WHEN '1'.
        gs_alv-txt_s = '银行转账'.
      WHEN '2'.
        gs_alv-txt_s = '现金支付'.
      WHEN '3'.
        gs_alv-txt_s = '银行承兑汇票'.
      WHEN '4'.
        gs_alv-txt_s = '商业承兑汇票'.
      WHEN '5'.
        gs_alv-txt_s = '信用证'.
      WHEN '6'.
        gs_alv-txt_s = '支票'.
      WHEN '7'.
        gs_alv-txt_s = 'POS机刷卡'.
      WHEN OTHERS.
    ENDCASE.
***出纳确认金额 = 付款总额
    gs_alv-zcnqre = gs_alv-zskze.
    SELECT SINGLE name1 INTO gs_alv-name1 FROM lfa1 WHERE lifnr = gs_alv-lifnr.

***获取汇率 和 本位币金额
    IF gs_alv-zbb = 'CNY' OR gs_alv-zbb = 'RMB' .
      gs_alv-kursf = '1'.
    ELSE.
      IF gs_alv-zdjzt = '3'.
        CLEAR lv_belnr.
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            input  = gs_alv-zkjpzbh
          IMPORTING
            output = lv_belnr.
        SELECT SINGLE kursf INTO gs_alv-kursf FROM bkpf WHERE bukrs = gs_alv-zgsdm AND belnr = lv_belnr AND gjahr = gs_alv-zkjnd.
      ELSE.
        CALL FUNCTION 'READ_EXCHANGE_RATE'
          EXPORTING
            client           = sy-mandt
            date             = gs_alv-zskrq
            foreign_currency = gs_alv-zbb
            local_currency   = 'CNY'
            type_of_rate     = 'M'
*           EXACT_DATE       = ' '
          IMPORTING
            exchange_rate    = gs_alv-kursf
          EXCEPTIONS
            no_rate_found    = 1
            no_factors_found = 2
            no_spread_found  = 3
            derived_2_times  = 4
            overflow         = 5
            zero_rate        = 6
            OTHERS           = 7.
      ENDIF.
    ENDIF.
    gs_alv-zamount = gs_alv-zskze * gs_alv-kursf.

    MODIFY gt_alv FROM gs_alv.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CLASS_SET_TOOLBAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_E_OBJECT  text
*----------------------------------------------------------------------*
FORM f_class_set_toolbar  CHANGING p_e_object
                          TYPE REF TO cl_alv_event_toolbar_set.
  DATA: ls_toolbar TYPE stb_button.
  CLEAR ls_toolbar-butn_type.
  APPEND ls_toolbar TO p_e_object->mt_toolbar.

  CLEAR ls_toolbar.
  MOVE 'ALL' TO ls_toolbar-function."添加“全选”按钮
  MOVE icon_select_all TO ls_toolbar-icon.
  MOVE '全选' TO ls_toolbar-quickinfo.
  MOVE '全选' TO ls_toolbar-text.
  MOVE '' TO ls_toolbar-disabled.
  APPEND ls_toolbar TO p_e_object->mt_toolbar.

  CLEAR ls_toolbar.
  MOVE 'DEALL' TO ls_toolbar-function."添加“取消全选”按钮
  MOVE icon_deselect_all TO ls_toolbar-icon.
  MOVE '取消全选' TO ls_toolbar-quickinfo.
  MOVE '取消全选' TO ls_toolbar-text.
  MOVE '' TO ls_toolbar-disabled.
  APPEND ls_toolbar TO p_e_object->mt_toolbar.

  CLEAR ls_toolbar.
  MOVE 'PASS' TO ls_toolbar-function."添加“审核通过”按钮
  MOVE icon_okay TO ls_toolbar-icon.
  MOVE '审核通过' TO ls_toolbar-quickinfo.
  MOVE '审核通过' TO ls_toolbar-text.
  MOVE '' TO ls_toolbar-disabled.
  APPEND ls_toolbar TO p_e_object->mt_toolbar.

  CLEAR ls_toolbar.
  MOVE 'DPASS' TO ls_toolbar-function."添加“取消审核”按钮
  MOVE icon_cancel TO ls_toolbar-icon.
  MOVE '取消审核' TO ls_toolbar-quickinfo.
  MOVE '取消审核' TO ls_toolbar-text.
  MOVE '' TO ls_toolbar-disabled.
  APPEND ls_toolbar TO p_e_object->mt_toolbar.

  CLEAR ls_toolbar.
  MOVE 'SAVE' TO ls_toolbar-function."添加“保存”按钮
  MOVE icon_system_save TO ls_toolbar-icon.
  MOVE '保存' TO ls_toolbar-quickinfo.
  MOVE '保存' TO ls_toolbar-text.
  MOVE '' TO ls_toolbar-disabled.
  APPEND ls_toolbar TO p_e_object->mt_toolbar.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CLASS_TOOLBAR_USER_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_UCOMM  text
*----------------------------------------------------------------------*
FORM f_class_toolbar_user_command  USING p_e_ucomm.
  CASE p_e_ucomm.
    WHEN 'ALL'.
      PERFORM f_alv_all_select.
    WHEN 'DEALL'.
      PERFORM f_alv_all_deselect.
    WHEN 'PASS'.
      PERFORM f_alv_pass.
    WHEN 'DPASS'.
      PERFORM f_alv_dpass.
    WHEN 'SAVE'.
      PERFORM f_alv_save.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CLASS_ON_F4
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_E_FIELDNAME  text
*      <--P_E_FIELDVALUE  text
*      <--P_ES_ROW_NO  text
*      <--P_ER_EVENT_DATA  text
*      <--P_ET_BAD_CELLS  text
*      <--P_E_DISPLAY  text
*----------------------------------------------------------------------*
FORM f_class_on_f4  CHANGING p_e_fieldname
                             p_e_fieldvalue
                             p_es_row_no
                             p_er_event_data
                             p_et_bad_cells
                             p_e_display.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_FIELDCATS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_set_fieldcats .
  CLEAR: gt_alv_fcat[],
         gs_alv_fcat.
  PERFORM f_alv_set_fieldcat USING:
               "fd      txt  out edit pos ckbox key
               'CHECK' '选择' '4' 'X' '1' 'X' 'X' '' '' ,
               'ZGSDM' '公司代码' '8' '' '2' '' '' '' '',
               'ZDJHM' '单据号码' '10' '' '3' '' '' '' '',
               'ZSKRQ' '付款日期' '10' 'X' '4' '' '' 'zficotfkt' 'ZGZRQ',
               'LIFNR' '供应商编号' '10' '' '5' '' '' '' '',
               'NAME1' '供应商名称' '40' '' '5' '' '' '' '',
               'ZHPHM' '汇票号码' '10' 'X' '6' '' '' 'zficotfkt' 'ZHPHM',
               'ZHPDQR' '汇票到期日' '10' 'X' '7' '' '' 'zficotfkt' 'ZHPDQR',
               'ZHRYH' '汇出银行账户' '20' 'X' '8' '' '' 'zficotfkt' 'ZHRYH',
*              'ZCNQRE' '出纳确认金额' '13' 'X' '9' '' '' 'zficotfkt' 'ZCNQRE',
*              'ZQRSXF' '确认手续费' '13' 'X' '10' '' '' 'zficotfkt' 'ZQRSXF',
               'ZYWY' '业务员' '10' '' '11' '' '' '' '',
               'ZSKFS' '付款方式' '8' '' '12' '' '' '' '',
               'TXT_S' '描述' '8' '' '13' '' '' '' '',
               'ZBB' '币别' '4' '' '14' '' '' '' '',
*               'ZHL' '汇率' '6' '' '15' '' '' '' '',
               'KURSF' '汇率' '6' '' '15' '' '' '' '',
               'ZAMOUNT' '本位币金额' '6' '' '15' '' '' '' '',
               'ZHKR' '货款期间' '6' '' '16' '' '' '' '',
               'ZSKZE' '付款总额' '13' '' '17' '' '' '' '',
               'ZDDFY' '代垫费用' '13' '' '18' '' '' '' '',
               'ZBZ' '备注' '20' '' '19' '' '' '' '',
               'ZGZRQ' '过账日期' '10' '' '20' '' '' '' '',
               'ZDJZT' '单据状态' '8' '' '21' '' '' '' '',
               'TXT' '状态描述' '8' '' '22' '' '' '' '',
               'ZZDRQ' '制单日期' '10' '' '23' '' '' '' '',
               'ZSHRQ' '审核日期' '10' '' '24' '' '' '' '',
               'ZPZRQ' '凭证日期' '10' '' '25' '' '' '' '',
               'ZQFRQ' '签发日期' '10' '' '27' '' '' '' '',
               'ZCDR'  '承兑人'   '40' '' '28' '' '' '' '',
               'ZCPR'  '名称/城市'   '40' '' '29' '' '' '' '',
               'ZKJPZBH' '会计凭证编号' '12' '' '30' '' '' '' '',
               'ZKJND' '会计年度' '8' '' '31' '' '' '' ''.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_REFRESH_ALV_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_refresh_alv_display .
  CALL METHOD cl_alv->refresh_table_display
    EXPORTING
      is_stable      = gs_refresh
      i_soft_refresh = ''.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0307   text
*      -->P_0308   text
*      -->P_0309   text
*      -->P_0310   text
*      -->P_0311   text
*      -->P_0312   text
*      -->P_0313   text
*----------------------------------------------------------------------*
FORM f_alv_set_fieldcat  USING fld
                               txt
                               out
                               edit
                               pos
                               ckbox
                               key
                               ref_table
                               ref_field.
  gs_alv_fcat-fieldname = fld.
  gs_alv_fcat-coltext   = txt.
  gs_alv_fcat-outputlen = out.
  gs_alv_fcat-edit      = edit.
  gs_alv_fcat-col_pos   = pos.
  gs_alv_fcat-checkbox  = ckbox.
  gs_alv_fcat-just      = 'C'.
  gs_alv_fcat-key       = key.
  gs_alv_fcat-ref_table = ref_table.
  gs_alv_fcat-ref_field = ref_field.
  APPEND gs_alv_fcat TO gt_alv_fcat.
  CLEAR: gs_alv_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_set_layout .
  CLEAR gs_layout.
  gs_layout-smalltitle = ''.
  gs_layout-grid_title = ''.
  gs_layout-zebra      =  'X'.
  gs_layout-sel_mode   = 'B'.
  gs_layout-no_toolbar = ''.
  gs_layout-no_rowmark = 'X'.
  gs_layout-edit_mode  = ''.
  gs_layout-detailinit = 'X'.
  gs_layout-cwidth_opt = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_EXCLUDE_TOOLBAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_exclude_toolbar .
  CLEAR: gt_toolbar_excluding.
  APPEND:
    cl_gui_alv_grid=>mc_fc_print               TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_lystyle_drag_drop_rows TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_lystyle_no_delete_rows TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_lystyle_no_insert_rows TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_to_office           TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_abc            TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_chain          TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_crbatch        TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_crweb          TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_lineitems      TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_master_data    TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_more           TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_report         TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_call_xint           TO gt_toolbar_excluding,
*    cl_gui_alv_grid=>mc_fc_call_xxl    to gt_toolbar_excluding,
*    cl_gui_alv_grid=>mc_fc_check               TO gt_toolbar_excluding,
*    cl_gui_alv_grid=>mc_mb_export    to gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_graph               TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_help                TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_html                TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_info                TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_pc_file             TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_views               TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_append_row      TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_copy            TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_copy_row        TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_cut             TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_delete_row      TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_insert_row      TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_move_row        TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_paste           TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_paste_new_row   TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_refresh             TO gt_toolbar_excluding,
    cl_gui_alv_grid=>mc_fc_loc_undo            TO gt_toolbar_excluding.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_ALL_SELECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_all_select .
  DATA lv_tabix TYPE sy-tabix.
  DATA lt_filtered TYPE lvc_t_fidx.
  CALL METHOD cl_alv->get_filtered_entries
    IMPORTING
      et_filtered_entries = lt_filtered.

  LOOP AT gt_alv INTO gs_alv.
    lv_tabix = sy-tabix.
    READ TABLE lt_filtered WITH KEY table_line = lv_tabix TRANSPORTING NO FIELDS.
    IF sy-subrc NE 0.
      gs_alv-check = 'X'.
      MODIFY gt_alv FROM gs_alv.
      CLEAR: gs_alv.
    ENDIF.
  ENDLOOP.
  PERFORM f_refresh_alv_display.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_ALL_DESELECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_all_deselect .
  LOOP AT gt_alv INTO gs_alv WHERE check = 'X'.
    gs_alv-check = ''.
    MODIFY gt_alv FROM gs_alv.
    CLEAR: gs_alv.
  ENDLOOP.
  PERFORM f_refresh_alv_display.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_PASS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_pass .
  DATA: ls_table TYPE zficotfkt,
        lt_table TYPE TABLE OF zficotfkt.
  DATA: l_fag TYPE c.

  IF  NOT gt_alv[] IS INITIAL.
    READ TABLE gt_alv INTO gs_alv WITH KEY check = 'X'.
    IF sy-subrc = 0.
      CLEAR l_fag.
      LOOP AT gt_alv INTO gs_alv WHERE check = 'X'.
        IF gs_alv-zdjzt NE '1'.
          l_fag = 'X'.
          MESSAGE '请只选择单据状态为已创建的行记录审核！' TYPE 'S' DISPLAY LIKE 'E'.
        ENDIF.
        IF gs_alv-zcnqre + gs_alv-zqrsxf NE gs_alv-zskze.
          l_fag = 'X'.
          MESSAGE '出纳确认金额与手续费之和需等于付款总额！' TYPE 'S' DISPLAY LIKE 'E'.
        ENDIF.
      ENDLOOP.
      IF l_fag NE 'X'.
        LOOP AT gt_alv INTO gs_alv WHERE check = 'X'.
          gs_alv-zdjzt = '2'.
          gs_alv-txt = '已审核'.
          gs_alv-zshrq = sy-datum.
          MODIFY gt_alv FROM gs_alv.

          MOVE-CORRESPONDING gs_alv TO ls_table.
          COLLECT ls_table INTO lt_table.
          CLEAR ls_table.

          CLEAR: gs_alv.
        ENDLOOP.
        IF NOT lt_table[] IS INITIAL.
          MODIFY zficotfkt FROM TABLE lt_table.
          IF sy-subrc = 0.
            COMMIT WORK.
          ELSE.
            ROLLBACK WORK.
          ENDIF.
        ENDIF.
        PERFORM f_refresh_alv_display.
        MESSAGE '审核成功！' TYPE 'S'.
        RETURN.
      ENDIF.
    ELSE.
      MESSAGE '请先选择需要审核的行！' TYPE 'I'.
      RETURN.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_DPASS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_dpass .
  DATA: ls_table TYPE zficotfkt,
        lt_table TYPE TABLE OF zficotfkt.
  DATA: l_flag TYPE c.

  IF  NOT gt_alv[] IS INITIAL.
    READ TABLE gt_alv INTO gs_alv WITH KEY check = 'X'.
    IF sy-subrc = 0.
      CLEAR l_flag.
      LOOP AT gt_alv INTO gs_alv WHERE check = 'X'.
        IF gs_alv-zdjzt NE '2'.
          l_flag = 'X'.
          MESSAGE '请只选择单据状态为已审核的行记录取消审核！' TYPE 'S' DISPLAY LIKE 'E'.
        ENDIF.
      ENDLOOP.
      IF l_flag NE 'X'.
        LOOP AT gt_alv INTO gs_alv WHERE check = 'X'.
          gs_alv-zdjzt = '1'.
          gs_alv-txt = '已创建'.
          gs_alv-zshrq = sy-datum.
          MODIFY gt_alv FROM gs_alv.

          MOVE-CORRESPONDING gs_alv TO ls_table.
          COLLECT ls_table INTO lt_table.
          CLEAR ls_table.

          CLEAR: gs_alv.
        ENDLOOP.
        IF NOT lt_table[] IS INITIAL.
          MODIFY zficotfkt FROM TABLE lt_table.
          IF sy-subrc = 0.
            COMMIT WORK.
          ELSE.
            ROLLBACK WORK.
          ENDIF.
        ENDIF.
        PERFORM f_refresh_alv_display.
        MESSAGE '取消审核成功！' TYPE 'S'.
        RETURN.
      ENDIF.
    ELSE.
      MESSAGE '请先选择需要取消审核的行！' TYPE 'I'.
      RETURN.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_ALV_SAVE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_save .
  DATA: ls_table TYPE zficotfkt,
        lt_table TYPE TABLE OF zficotfkt.
  IF  NOT gt_alv[] IS INITIAL.
    LOOP AT gt_alv INTO gs_alv.
      MOVE-CORRESPONDING gs_alv TO ls_table.
      COLLECT ls_table INTO lt_table.
      CLEAR ls_table.
    ENDLOOP.
    IF NOT lt_table[] IS INITIAL.
      MODIFY zficotfkt FROM TABLE lt_table.
      IF sy-subrc = 0.
        COMMIT WORK.
        MESSAGE '数据保存成功！' TYPE 'S'.
      ELSE.
        ROLLBACK WORK.
      ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ES_ROW_NO  text
*----------------------------------------------------------------------*
FORM double_click  USING p_e_row.
  READ TABLE gt_alv INTO gs_alv INDEX p_e_row.
  IF sy-subrc = 0.
    CLEAR gwa_skt.
    MOVE-CORRESPONDING gs_alv TO gwa_skt.
    SELECT *
      FROM zficotfkh
      INTO CORRESPONDING FIELDS OF TABLE gt_skh
      WHERE zgsdm = gwa_skt-zgsdm
        AND zdjhm = gwa_skt-zdjhm.
    PERFORM get_name.
    CALL SCREEN 9002 STARTING AT 40 1.
    PERFORM f_refresh_alv_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_name .
  IF gwa_skt-lifnr IS NOT INITIAL.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = gwa_skt-lifnr
      IMPORTING
        output = gwa_skt-lifnr.

    SELECT SINGLE name1
      INTO g_khmc
      FROM lfa1
      WHERE lifnr = gwa_skt-lifnr.
  ENDIF.

  SELECT SINGLE txt20
      INTO (g_zhmc)
      FROM skat
      WHERE spras = '1'
        AND saknr = gwa_skt-zhryh.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_SAVE_200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_save_200 .

  DATA:l_dmt TYPE zficotfkt-zskze.
  DATA:l_dmz TYPE zficotfkt-zskze.
  DATA:l_waers TYPE skb1-waers."汇率货币检查

  IF NOT gwa_skt IS INITIAL.
    IF gwa_skt-zskfs = '3'
      OR gwa_skt-zskfs = '4'.
      IF gwa_skt-zhphm IS INITIAL
        OR gwa_skt-zhpdqr IS INITIAL.
        MESSAGE '汇票方式汇票号码和汇票到期日不能为空！' TYPE 'S' DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.
    ENDIF.

    IF gwa_skt-zskfs = '1'
      OR gwa_skt-zskfs = '2'
      OR gwa_skt-zskfs = '7'.
      "汇率检查
      CLEAR l_waers.
      SELECT SINGLE waers
        INTO l_waers
        FROM skb1
        WHERE bukrs = gwa_skt-zgsdm
          AND saknr = gwa_skt-zhryh.

      IF l_waers = gwa_skt-zbb
        AND gwa_skt-zhl IS NOT INITIAL.
        MESSAGE '汇出账户对应货币一致,不可填汇率！' TYPE 'S' DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.

      IF gwa_skt-zcnqre1 IS INITIAL AND gwa_skt-zhl IS NOT INITIAL.
        MESSAGE '出纳确认金额RMB必填！' TYPE 'S' DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.
    ENDIF.

    CLEAR:l_dmt.
    LOOP AT gt_skh INTO gwa_skh.
      l_dmt = l_dmt + gwa_skh-zskje.
    ENDLOOP.
    "付款总额= 出纳确认金额+手续费
    CLEAR l_dmz.
    l_dmz = gwa_skt-zcnqre + gwa_skt-zqrsxf.
    IF gwa_skt-zskze NE l_dmz.
      MESSAGE '出纳确认金额与手续费之和需等于付款总额！' TYPE 'S' DISPLAY LIKE 'E'.
      RETURN.
    ENDIF.
    "付款总额= 行项目总金额+代垫费用
*    CLEAR L_DMZ.
*    L_DMZ = L_DMT + GWA_SKT-ZDDFY.
*    IF GWA_SKT-ZSKZE NE L_DMZ.
*      MESSAGE '金额不相等，请检查！' TYPE 'S' DISPLAY LIKE 'E'.
*      RETURN.
*    ENDIF.
    MODIFY zficotfkt FROM gwa_skt.
    IF sy-subrc = 0.
      COMMIT WORK.
    ELSE.
      ROLLBACK WORK.
    ENDIF.
    LOOP AT gt_alv INTO gs_alv WHERE zgsdm = gwa_skt-zgsdm
                                   AND zdjhm = gwa_skt-zdjhm.
      MOVE-CORRESPONDING gwa_skt TO gs_alv.
      MODIFY gt_alv FROM gs_alv.
    ENDLOOP.
    LEAVE TO SCREEN 0.
    PERFORM f_refresh_alv_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INITIT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM initit_data .
  IF s_zdjzt[] IS INITIAL.
    s_zdjzt-sign = 'I'.
    s_zdjzt-option = 'EQ'.
    s_zdjzt-low = '1'.
    APPEND s_zdjzt.

*    S_ZDJZT-SIGN = 'I'.
*    S_ZDJZT-OPTION = 'EQ'.
*    S_ZDJZT-LOW = '2'.
*    APPEND S_ZDJZT.
  ENDIF.
ENDFORM.
