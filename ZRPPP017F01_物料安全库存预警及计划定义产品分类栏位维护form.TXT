*&---------------------------------------------------------------------*
*&  包含                ZRPPP017F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_INITIAL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_initial_data .
*******数据定义*******
  INCLUDE <icon>.
  DATA ls_functxt TYPE smp_dyntxt.
  DATA:gt_exbut TYPE TABLE OF sy-ucomm.
*******初始化*******
*******程序主体******
  "屏幕工具栏中按饼
  "启用自定义工具
  CLEAR ls_functxt.
  ls_functxt-icon_text = '模板下载'."'Download Template'.
  ls_functxt-icon_id   = '@49@'.
  ls_functxt-quickinfo =  '模板下载'.
  sscrfields-functxt_01 = ls_functxt.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_FILENAME_FIND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_P_FILE  text
*----------------------------------------------------------------------*
FORM frm_filename_find CHANGING xc_file.
  CALL FUNCTION 'WS_FILENAME_GET'
    EXPORTING
      def_filename     = xc_file
      def_path         = 'C:\'
      mask             = ',*.XLS.'
      mode             = 'O'
      title            = '文件名'
    IMPORTING
      filename         = xc_file
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_DOWNLOAD_TEMPLATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0036   text
*      <--P_P_FILE  text
*----------------------------------------------------------------------*
FORM frm_download_template USING u_objid LIKE wwwdatatab-objid CHANGING ic_file.
  DATA:l_path   TYPE string.

  CALL METHOD zcl_ole_excel=>download_templet
    EXPORTING
      iv_objid        = u_objid
      iv_win_title    = '请指定下载路径'
      iv_df_extension = 'XLS'
    IMPORTING
      ev_fullpath     = l_path.

  CALL METHOD cl_gui_frontend_services=>execute
    EXPORTING
      document = l_path
    EXCEPTIONS
      OTHERS   = 10.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_upload_data .
  FIELD-SYMBOLS:<fs_field> LIKE LINE OF gt_upload..

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename                = p_file
      i_begin_col             = 1
      i_begin_row             = 2
      i_end_col               = 10
      i_end_row               = 9999
    TABLES
      intern                  = gt_upload
    EXCEPTIONS
      inconsistent_parameters = 1
      upload_ole              = 2
      OTHERS                  = 3.
***将数据整理到内表中

  LOOP AT gt_upload ASSIGNING <fs_data>.
    AT NEW row.
      CLEAR:gt_out.
    ENDAT.
    PERFORM frm_convert_data.
    AT END OF row.
      PERFORM frm_check_data.
      APPEND gt_out.
      CLEAR: gt_out.
    ENDAT.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_CONVERT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_convert_data .
  CASE <fs_data>-col.
    WHEN '1'.         "物料号码
      gt_out-matnr = <fs_data>-value.
    WHEN '2'.         "物料描述
      gt_out-maktx = <fs_data>-value.
    WHEN '3'.         "安全库存预警
      gt_out-eisbe = <fs_data>-value.
    WHEN '4'.         "计划定义产品分类
      gt_out-zjhcpfl = <fs_data>-value.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_data .

  IF gt_out-matnr IS NOT INITIAL.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = gt_out-matnr
      IMPORTING
        output       = gt_out-matnr
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.
    SELECT SINGLE * FROM mara WHERE matnr = gt_out-matnr.
    IF sy-subrc NE 0.
      mcr_add_msg:'物料不存在'.
    ENDIF.
  ELSE.
    mcr_add_msg:'请输入物料号'.
  ENDIF.

  IF gt_out-zmsg IS NOT INITIAL.
    gt_out-zicon = icon_led_red.
    gt_out-msgty = 'E'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_fieldcat .
  IF r1 = 'X'.
    mcr_build_fieldcat:'ZICON'     '状态'             ''           ''          'C'    '20',
                       'ZMSG'      '消息'             ''           ''          'C'    '250'.
  ENDIF.

  mcr_build_fieldcat:'MATNR'     '物料号码'         'MATNR'      'MARA'      ''     '',
                     'MAKTX'     '物料描述'         'MAKTX'      'MAKT'      ''     '',
                     'EISBE'     '安全库存预警'     'EISBE'      'MARC'      ''     '',
                     'ZJHCPFL'   '计划定义产品分类' ''           ''          'C'    '30'.

  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_output_data .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
*     I_INTERFACE_CHECK        = ' '
*     I_BYPASSING_BUFFER       =
*     I_BUFFER_ACTIVE          =
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'FRM_PF_STATUS'
      i_callback_user_command  = 'FRM_USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE   = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME         =
*     I_BACKGROUND_ID          = ' '
*     I_GRID_TITLE             =
*     I_GRID_SETTINGS          =
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat[]
*     IT_EXCLUDING             =
*     IT_SPECIAL_GROUPS_LVC    =
*     IT_SORT_LVC              =
*     IT_FILTER_LVC            =
*     IT_HYPERLINK             =
*     IS_SEL_HIDE              =
      i_default                = 'X'
      i_save                   = 'A'
*     IS_VARIANT               =
*     IT_EVENTS                =
*     IT_EVENT_EXIT            =
*     IS_PRINT_LVC             =
*     IS_REPREP_ID_LVC         =
*     I_SCREEN_START_COLUMN    = 0
*     I_SCREEN_START_LINE      = 0
*     I_SCREEN_END_COLUMN      = 0
*     I_SCREEN_END_LINE        = 0
*     I_HTML_HEIGHT_TOP        =
*     I_HTML_HEIGHT_END        =
*     IT_ALV_GRAPHICS          =
*     IT_EXCEPT_QINFO_LVC      =
*     IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER  =
*     ES_EXIT_CAUSED_BY_USER   =
    TABLES
      t_outtab                 = gt_out[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      FORM  frm_pf_status
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_pf_status USING rt_extab TYPE slis_t_extab.
  IF r1 = 'X'.
    SET PF-STATUS 'PF_1000'.
  ELSE.
    SET PF-STATUS 'PF_1000' EXCLUDING 'ZUPLOAD'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      FORM  frm_user_command
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_user_command USING r_ucomm LIKE sy-ucomm
                            rs_selfield TYPE slis_selfield..

  DATA:lv_grid TYPE REF TO cl_gui_alv_grid.

  rs_selfield-refresh = 'X'.
  rs_selfield-col_stable = 'X'.
  rs_selfield-row_stable = 'X'.

  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = lv_grid.

  CASE r_ucomm.
    WHEN 'ZUPLOAD'.  "导入数据
      PERFORM frm_modify_data.
      CALL METHOD lv_grid->set_frontend_layout
        EXPORTING
          is_layout = gs_layout.
    WHEN OTHERS.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_MODIFY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_modify_data .
  DATA:lt_data LIKE ztpp001 OCCURS 0 WITH HEADER LINE.
  READ TABLE gt_out WITH KEY msgty = 'E'.
  IF sy-subrc = 0.
    MESSAGE '上传数据存在错误，请先修正' TYPE 'E'.
    EXIT.
  ENDIF.

  LOOP AT gt_out WHERE msgty IS INITIAL.
    MOVE-CORRESPONDING gt_out TO lt_data.
    APPEND lt_data.
    CLEAR lt_data.
  ENDLOOP.
  IF lt_data[] IS NOT INITIAL.
    MODIFY ztpp001 FROM TABLE lt_data.
    IF sy-subrc = 0.
      COMMIT WORK AND WAIT.
      LOOP AT gt_out.
        gt_out-zicon = icon_led_green.
        gt_out-msgty = 'S'.
        gt_out-zmsg = '导入成功'.
        MODIFY gt_out.
      ENDLOOP.
    ELSE.
      ROLLBACK WORK.
      LOOP AT gt_out.
        gt_out-zicon = icon_led_red.
        gt_out-msgty = 'E'.
        gt_out-zmsg = '导入失败'.
        MODIFY gt_out.
      ENDLOOP.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_MODIFY_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_modify_screen .
  IF r1 = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'M2'.
        screen-active = 0.
        screen-invisible = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSEIF r2 = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'M1'.
        screen-active = 0.
        screen-invisible = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_data .
  DATA:BEGIN OF lt_makt OCCURS 0,
         matnr LIKE makt-matnr,
         maktx LIKE makt-maktx,
       END OF lt_makt.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_out
    FROM ztpp001
    WHERE matnr IN s_matnr.

  CHECK gt_out[] IS NOT INITIAL.
***物料描述
  SELECT matnr maktx
    INTO CORRESPONDING FIELDS OF TABLE lt_makt
    FROM makt
    FOR ALL ENTRIES IN gt_out
    WHERE matnr = gt_out-matnr
      AND spras = sy-langu.

  SORT lt_makt BY matnr.

  LOOP AT gt_out.
    READ TABLE lt_makt WITH KEY matnr = gt_out-matnr BINARY SEARCH.
    IF sy-subrc = 0.
      gt_out-maktx = lt_makt-maktx.
    ENDIF.
    MODIFY gt_out.
  ENDLOOP.

ENDFORM.
