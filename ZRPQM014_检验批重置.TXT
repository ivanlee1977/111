*&---------------------------------------------------------------------*
*& Report ZRPQM014
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zrpqm014.
*----------------------------------------------------------------------*
*  Datendefinitionen
*----------------------------------------------------------------------*
* Tabellen
*----------------------------------------------------------------------*
TABLES sscrfields.
TABLES qals.
TABLES qave.

*----------------------------------------------------------------------*
* Konstanten
CONSTANTS:
  c_rc_0  LIKE sy-subrc           VALUE 0,
  c_rc_4  LIKE sy-subrc           VALUE 4,
  c_rc_20 LIKE sy-subrc           VALUE 20,
*
  c_kreuz LIKE qm00-qkz           VALUE 'X'.
*

*----------------------------------------------------------------------*
* Eingabebildschirm
SELECTION-SCREEN SKIP 2.
PARAMETERS p_pruefl  LIKE qals-prueflos MATCHCODE OBJECT qals
MEMORY ID qls .
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK search WITH FRAME.
SELECTION-SCREEN BEGIN OF LINE.

SELECTION-SCREEN PUSHBUTTON 3(20) TEXT-s01 USER-COMMAND sear.
SELECTION-SCREEN PUSHBUTTON 40(20) TEXT-s02 USER-COMMAND show.

SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK search.


*----------------------------------------------------------------------*
AT SELECTION-SCREEN.

  IF sscrfields-ucomm EQ 'SEAR'
  OR p_pruefl IS INITIAL.
    CALL FUNCTION 'QELA_START_SELECTION_OF_LOTS'
      EXPORTING
        i_selid          = ' '
        i_stat_aenderung = 'X'
        i_stat_ero       = 'X'
        i_stat_frei      = 'X'
        i_stat_ve        = ' '
      IMPORTING
        e_prueflos       = p_pruefl
      EXCEPTIONS
        no_entry         = 1
        no_selected      = 2
        OTHERS           = 3.
  ENDIF.


  IF sscrfields-ucomm EQ 'SHOW'.
    CALL FUNCTION 'QSS1_LOT_SHOW'
      EXPORTING
        i_prueflos = p_pruefl.
  ENDIF.

  CHECK sscrfields-ucomm EQ 'ONLI'.

* ab hier mu? Pr¨¹flosnummer gef¨¹llt sein.
  IF p_pruefl IS INITIAL.
    MESSAGE e164(qa).
  ENDIF.

* Lesen Los
  CALL FUNCTION 'ENQUEUE_EQQALS1'
    EXPORTING
      prueflos = p_pruefl.

  CALL FUNCTION 'QPSE_LOT_READ'
    EXPORTING
      i_prueflos = p_pruefl
    IMPORTING
      e_qals     = qals
    EXCEPTIONS
      no_lot     = 1.
  IF NOT sy-subrc IS INITIAL.
    MESSAGE e102(qa).
  ENDIF.
*-----------------
* Pr¨¹fen Status
  CALL FUNCTION 'QAST_STATUS_CHECK'
    EXPORTING
      i_objnr          = qals-objnr
      i_status         = 'I0218' "Status VE getroffen
    EXCEPTIONS
      status_not_activ = 1.
  IF NOT sy-subrc IS INITIAL.
    MESSAGE e102(qv) WITH qals-prueflos.
  ENDIF.
*
  CALL FUNCTION 'QEVA_UD_READ'
    EXPORTING
      i_prueflos = qals-prueflos
    IMPORTING
      e_qave     = qave.


*---------------------------------------------------------------------*
START-OF-SELECTION.
* Vorgaben sind ok.   1. Material Umlagern und Los ?ndern

  PERFORM f_qals_aendern.
************************************************************************
*----------------------------------------------------------------------*
*       FORM F_QALS_aendern
*----------------------------------------------------------------------*
FORM f_qals_aendern.
*
  PERFORM f_status_fix_setzen USING 'I0002' c_kreuz.
  PERFORM f_status_fix_setzen USING 'I0216' space.
  PERFORM f_status_fix_setzen USING 'I0217' space.
  PERFORM f_status_fix_setzen USING 'I0218' space.
  CLEAR: qals-stat14.
  CLEAR: qals-stat35.
  CLEAR: qave-vauswahlmg,
  qave-vwerks,
  qave-versionam,
  qave-vcodegrp,
  qave-vcode,
  qave-vbewertung,
  qave-versioncd,
  qave-vfolgeakti,
  qave-qkennzahl.
*--... verbuchen
  CALL FUNCTION 'QEVA_UD_UPDATE' IN UPDATE TASK
    EXPORTING
      qals_new = qals
      qave_new = qave.
  COMMIT WORK.
  MESSAGE s101(qa) WITH qals-prueflos.
ENDFORM.                    "f_qals_aendern
*----------------------------------------------------------------------*
*       Form  F_STATUS_FIX_SETZEN
*----------------------------------------------------------------------*
*   Setzen eines Status aufgrund von Voreinstellungen wie QMAT etc.    *
*----------------------------------------------------------------------*
*  -->  STATUS    Status der gesetzt werden soll
*  -->  AKTIV     Status wird aktiviert sonst deaktiviert
*----------------------------------------------------------------------*
FORM f_status_fix_setzen USING
      VALUE(p_status) LIKE tj02-istat
      VALUE(p_aktiv) LIKE c_kreuz.
* lokale Tabelle fuer Statusfortschreibung
  DATA: BEGIN OF li_stattab OCCURS 0.
      INCLUDE STRUCTURE jstat.
  DATA  END OF li_stattab.
*
* Falls Objektnr. nicht gef¨¹llt. --> Fehlermeldung !!!
  IF qals-objnr EQ space.
    MESSAGE e013(qv).
*   Fehlende Objektnr.: Problem f¨¹
  ENDIF.
  MOVE p_status TO li_stattab-stat.
  IF p_aktiv EQ space.
    MOVE c_kreuz TO li_stattab-inact.
  ENDIF.
*
  APPEND li_stattab.
*
  CALL FUNCTION 'STATUS_CHANGE_INTERN'
    EXPORTING
      check_only = space
      objnr      = qals-objnr
    TABLES
      status     = li_stattab.

ENDFORM.                               " F_STATUS_FIX_SETZEN
