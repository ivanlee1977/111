*&---------------------------------------------------------------------*
*&  包含                ZRPMM038F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_data .
  DATA:lt_makt LIKE makt OCCURS 0 WITH HEADER LINE.
***抓取满足条件的数据
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_out
    FROM ztmm008
    WHERE aufnr IN s_aufnr
      AND erdat IN s_erdat
      AND zsqno IN s_zsqno
      AND ernam IN s_ernam
      AND zstat = p_zstat.

  CHECK gt_out[] IS NOT INITIAL.

  SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_makt FROM makt FOR ALL ENTRIES IN gt_out WHERE matnr = gt_out-matnr AND spras = sy-langu.

  SORT lt_makt BY matnr.

  LOOP AT gt_out.
    READ TABLE lt_makt WITH KEY matnr = gt_out-matnr BINARY SEARCH.
    IF sy-subrc = 0.
      gt_out-maktx = lt_makt-maktx.
    ENDIF.
    MODIFY gt_out.
  ENDLOOP.

  SORT gt_out.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_fieldcat .
  mcr_build_fieldcat:'CHECK'   '选择'           ''       ''      ,
                     'ZSQNO'   '退补料申请单号' 'ZSQNO'  'ZTMM008',
                     'AUFNR'   '生产订单号'     'AUFNR'  'ZTMM008',
                     'RSNUM'   '预留号码'       'RSNUM'  'ZTMM008',
                     'RSPOS'   '预留项次'       'RSPOS'  'ZTMM008',
                     'RSART'   '预留记录类型'       'RSPOS'  'ZTMM008',
                     'MATNR'   '物料号码'       'MATNR'  'ZTMM008',
                     'MAKTX'   '物料描述'       'MAKTX'  'MAKT',
                     'CHARG'   '批次'           'CHARG'  'ZTMM008',
                     'LGORT'   '退料库位'       'LGORT'  'T001L',
                     'LGORT_F' '补料库位'       'LGORT'  'T001L',
                     'MENGE_T' '退料数量'       'MENGE_T'  'ZTMM008',
                     'MENGE_F' '补料数量'       'MENGE_F'  'ZTMM008',
                     'MEINS'   '单位'           'MEINS'  'ZTMM008',
                     'ZTEXT'   '文本'           'ZTEXT'  'ZTMM008',
                     'ZSTAT'   '过账状态'       'ZSTAT'  'ZTMM008',
                     'ZDEL'    '删除标识'       'ZDEL'   'ZTMM008',
                     'ERDAT'   '创建日期'       'ERDAT'   'ZTMM008',
                     'ERNAM'   '创建人'         'ERNAM'   'ZTMM008'.

  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_output_data .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
*     I_INTERFACE_CHECK        = ' '
*     I_BYPASSING_BUFFER       =
*     I_BUFFER_ACTIVE          =
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'FRM_PF_STATUS'
      i_callback_user_command  = 'FRM_USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE   = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME         =
*     I_BACKGROUND_ID          = ' '
*     I_GRID_TITLE             =
*     I_GRID_SETTINGS          =
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat[]
*     IT_EXCLUDING             =
*     IT_SPECIAL_GROUPS_LVC    =
*     IT_SORT_LVC              =
*     IT_FILTER_LVC            =
*     IT_HYPERLINK             =
*     IS_SEL_HIDE              =
      i_default                = 'X'
      i_save                   = 'A'
*     IS_VARIANT               =
*     IT_EVENTS                =
*     IT_EVENT_EXIT            =
*     IS_PRINT_LVC             =
*     IS_REPREP_ID_LVC         =
*     I_SCREEN_START_COLUMN    = 0
*     I_SCREEN_START_LINE      = 0
*     I_SCREEN_END_COLUMN      = 0
*     I_SCREEN_END_LINE        = 0
*     I_HTML_HEIGHT_TOP        =
*     I_HTML_HEIGHT_END        =
*     IT_ALV_GRAPHICS          =
*     IT_EXCEPT_QINFO_LVC      =
*     IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER  =
*     ES_EXIT_CAUSED_BY_USER   =
    TABLES
      t_outtab                 = gt_out[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_PF_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_pf_status USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'PF_1000'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_USER_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_user_command USING r_ucomm LIKE sy-ucomm
                            rs_selfield TYPE slis_selfield..
  DATA:lv_grid TYPE REF TO cl_gui_alv_grid.

  rs_selfield-refresh = 'X'.
  rs_selfield-col_stable = 'X'.
  rs_selfield-row_stable = 'X'.

  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = lv_grid.

  CALL METHOD lv_grid->check_changed_data( ).

  CASE r_ucomm.
    WHEN 'ZALL'.  "全选
      PERFORM frm_select_all_data USING 'X'.
    WHEN 'ZDALL'. "取消全选
      PERFORM frm_select_all_data USING space.
    WHEN 'ZDELETE'."生成申请单
      PERFORM frm_delete_data.
    WHEN OTHERS.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_ALL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0289   text
*----------------------------------------------------------------------*
FORM frm_select_all_data USING  u_flag TYPE c.
  LOOP AT gt_out WHERE check NE u_flag.
    gt_out-check = u_flag.
    MODIFY gt_out.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_DELETE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_delete_data .
  DATA:lt_data LIKE ztmm008 OCCURS 0 WITH HEADER LINE.

  READ TABLE gt_out WITH KEY check = 'X'.
  IF sy-subrc NE 0.
    MESSAGE '请至少选择一行数据' TYPE 'I'.
    EXIT.
  ENDIF.

  LOOP AT gt_out WHERE check = 'X' AND zstat NE '1'.
    MESSAGE '只能选择过账状态为1的数据进行删除' TYPE 'I'.
    EXIT.
  ENDLOOP.
  IF sy-subrc = 0.
    EXIT.
  ENDIF.

  LOOP AT gt_out WHERE check = 'X'.
    MOVE-CORRESPONDING gt_out TO lt_data.
    lt_data-zdel = 'X'.
    APPEND lt_data.
    CLEAR lt_data.
  ENDLOOP.

  IF lt_data[] IS NOT INITIAL.
    MODIFY ztmm008 FROM TABLE lt_data.
    IF sy-subrc = 0.
      COMMIT WORK AND WAIT.
      MESSAGE '删除数据成功' TYPE 'S'.
      LOOP AT gt_out WHERE check = 'X'.
        gt_out-zdel = 'X'.
        MODIFY gt_out.
      ENDLOOP.
    ELSE.
      ROLLBACK WORK.
      MESSAGE '删除数据失败' TYPE 'E'.
    ENDIF.
  ENDIF.
ENDFORM.
