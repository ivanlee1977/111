*&---------------------------------------------------------------------*
*&  包含                ZSDRP022F01
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  FRM_GET_AUSP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_ausp .
  REFRESH:gt_ausp.
*  根据物料取出产品线和系列
  SELECT a~objek a~atinn a~atwrt b~atnam
   INTO CORRESPONDING FIELDS OF TABLE gt_ausp
   FROM ausp AS a INNER JOIN cabn AS b ON a~atinn = b~atinn
   WHERE b~atnam IN ('ZFER_XL','ZFER_CPX','ZFER_ZXL','ZFER_DYZXH').
  SORT gt_ausp BY objek.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SUB_SEARCH_HELP_ZXL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM sub_search_help_zxl USING lv_field LIKE dfies-fieldname
                               lv_dynfield LIKE help_info-dynprofld
                               lv_atnam LIKE cabn-atnam.
  DATA: lv_pvalkey TYPE ddshpvkey.

  DATA: lt_zxl LIKE gt_xl OCCURS 0 WITH HEADER LINE.

  LOOP AT gt_ausp WHERE atnam = lv_atnam.
    lt_zxl-atwrt = gt_ausp-atwrt.
    APPEND lt_zxl.
  ENDLOOP.

  SORT lt_zxl BY atwrt.
  DELETE ADJACENT DUPLICATES FROM lt_zxl.

  lv_pvalkey = lv_field.
  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = lv_field
      pvalkey         = lv_pvalkey
      dynpprog        = sy-repid
      dynpnr          = sy-dynnr
      dynprofield     = lv_dynfield
      window_title    = '选择'
      value           = ' '
      value_org       = 'S'
    TABLES
      value_tab       = lt_zxl
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  frm_get_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_data .
  REFRESH:gt_vbrp.

* 根据选择屏幕从表vbrp中取出交货单信息
  SELECT a~vbeln a~posnr b~vkorg b~vtweg a~matnr AS objek a~arktx a~fkimg a~vrkme a~kzwi1 AS zpric_yb a~vgbel a~vgpos
         b~waerk a~aubel b~kunag AS kunnr b~vkorg b~fkdat c~spart b~fkart b~bukrs
         e~bzirk d~vkbur d~vkgrp d~kvgr1 b~kurrf AS kursk d~kvgr2 a~matnr e~kdgrp a~aupos
    INTO CORRESPONDING FIELDS OF TABLE gt_vbrp
    FROM vbrp AS a INNER JOIN vbrk AS b ON a~vbeln = b~vbeln
                   INNER JOIN mara AS c ON a~matnr = c~matnr
                   INNER JOIN vbak AS d ON a~aubel = d~vbeln
                   INNER JOIN vbkd AS e ON a~aubel = e~vbeln
   WHERE b~fkdat IN s_wadat
     AND b~bukrs IN s_bukrs
     AND b~vkorg IN s_vkorg
     AND b~vtweg IN s_vtweg
     AND c~matkl IN s_matkl
     AND c~spart IN s_spart
     AND b~fkart LIKE 'Z%' "( 'ZF1','ZF2','ZF3','ZF4','ZF1S','ZF2S','ZF3S','ZF4S','ZG' )
     AND e~posnr EQ space
     AND d~kvgr1 IN  s_kvgr1
     AND d~kvgr2 IN s_kvgr2 "add by wusk 20170118
     AND e~bzirk  IN s_bzirk
     AND d~vkbur IN s_vkbur  "add by wusk 20170118
     AND d~vkgrp IN s_vkgrp . "add by wusk 20170118

  CHECK gt_vbrp[] IS NOT INITIAL.
  SORT gt_vbrp BY vbeln posnr.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_PROCESS_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_process_data .
* 取客户
  DATA: lt_knvv  LIKE knvv OCCURS 0 WITH HEADER LINE,
        lt_kna1  LIKE kna1 OCCURS 0 WITH HEADER LINE,
        lt_t171t LIKE t171t OCCURS 0 WITH HEADER LINE, "销售大区描述
        lt_tvkbt LIKE tvkbt OCCURS 0 WITH HEADER LINE, "行办描述
        lt_tvgrt LIKE tvgrt OCCURS 0 WITH HEADER LINE, "销售组描述
        lt_tvv1t LIKE tvv1t OCCURS 0 WITH HEADER LINE. "业务员描述

  DATA: lv_knumv LIKE konv-knumv,
        lv_kposn LIKE konv-kposn,
        lv_tabix LIKE sy-tabix,
        lv_zmeng LIKE vbap-zmeng.
*  根据选择屏幕条件从表KNVV中取出客户相关信息
*  SELECT * INTO TABLE lt_knvv
*    FROM knvv
*   WHERE kunnr IN s_kunnr
*     AND vkorg IN s_vkorg
*     AND vtweg IN s_vtweg
*     AND bzirk IN s_bzirk
*     AND vkbur IN s_vkbur
*     AND vkgrp IN s_vkgrp
*     AND kvgr1 IN s_kvgr1
*     AND kvgr2 IN s_kvgr2.
*  SORT lt_knvv BY kunnr vkorg vtweg.
*  根据客户取出客户主数据
  SELECT * INTO TABLE lt_kna1 FROM kna1    FOR ALL ENTRIES IN gt_vbrp    WHERE kunnr = gt_vbrp-kunnr.
  SORT lt_kna1 BY kunnr.
*  取销售大区描述
  SELECT * INTO TABLE lt_t171t FROM t171t WHERE spras EQ sy-langu AND bzirk IN s_bzirk.
  SORT lt_t171t BY bzirk.
*  取行办描述
  SELECT * INTO TABLE lt_tvkbt FROM tvkbt WHERE spras EQ sy-langu AND vkbur IN s_vkbur.
  SORT lt_tvkbt BY vkbur.
*  取销售组描述
  SELECT * INTO TABLE lt_tvgrt FROM tvgrt WHERE spras EQ sy-langu AND vkgrp IN s_vkgrp.
  SORT lt_tvgrt BY vkgrp.
*  取业务员描述
  SELECT * INTO TABLE lt_tvv1t FROM tvv1t WHERE spras EQ sy-langu AND kvgr1 IN s_kvgr1.
  SORT lt_tvv1t BY kvgr1.

  DATA:lv_kvgr11 LIKE knvv-kvgr1.
  REFRESH:gt_alv.
  LOOP AT gt_vbrp.
    CLEAR:lv_tabix,gt_alv.
    lv_tabix = sy-tabix.
***权限字段检查
    AUTHORITY-CHECK OBJECT 'V_VBAK_VKO'
             ID 'VKORG' FIELD gt_vbrp-vkorg
             ID 'VTWEG' DUMMY
             ID 'SPART' DUMMY
             ID 'ACTVT' FIELD '03'.
    IF sy-subrc <> 0.
      DELETE gt_vbrp INDEX lv_tabix.
      CONTINUE.
    ENDIF.

*  取产品系列
    LOOP AT gt_ausp WHERE objek = gt_vbrp-objek.
      CASE gt_ausp-atnam.
        WHEN 'ZFER_CPX'.
          gt_vbrp-zfer_cpx = gt_ausp-atwrt.
        WHEN 'ZFER_XL'.
          gt_vbrp-zfer_xl = gt_ausp-atwrt.
        WHEN 'ZFER_ZXL'.
          gt_vbrp-zfer_zxl = gt_ausp-atwrt.
        WHEN 'ZFER_DYZXH'.
          gt_vbrp-zfer_zxh = gt_ausp-atwrt.
        WHEN OTHERS.
      ENDCASE.
    ENDLOOP.

    IF gt_vbrp-zfer_cpx NOT IN s_cpx.
      DELETE gt_vbrp INDEX lv_tabix.
      CONTINUE.
    ENDIF.

    IF gt_vbrp-zfer_xl NOT IN s_xl.
      DELETE gt_vbrp INDEX lv_tabix.
      CONTINUE.
    ENDIF.

*  取销售大区、行办、销售组、业务员
*    CLEAR: lt_knvv.
*    READ TABLE lt_knvv WITH KEY kunnr = gt_vbrp-kunag vkorg = gt_vbrp-vkorg vtweg = gt_vbrp-vtweg BINARY SEARCH.
*    CHECK sy-subrc = 0.
    IF gt_vbrp-kunnr = 'A000' OR gt_vbrp-kunnr = 'C000'.
      AUTHORITY-CHECK OBJECT 'Z_KVGR1'
               ID 'KVGR1' FIELD gt_vbrp-kvgr1.
    ELSE.  "取客户主数据业务员，进行权限控制 20180103 YZP
      CLEAR lv_kvgr11.
      SELECT SINGLE kvgr1 INTO lv_kvgr11 FROM knvv WHERE kunnr = gt_vbrp-kunnr AND vkorg = gt_vbrp-vkorg .
      AUTHORITY-CHECK OBJECT 'Z_KVGR1'
               ID 'KVGR1' FIELD lv_kvgr11.
    ENDIF.
    IF sy-subrc <> 0.
      DELETE gt_vbrp INDEX lv_tabix.
      CONTINUE.
    ENDIF.
*    gt_alv-bzirk = gt_vbrp-bzirk."销售大区
*    gt_alv-vkbur = gt_vbrp-vkbur."行办
*    gt_alv-vkgrp = gt_vbrp-vkgrp."销售组
*    gt_alv-kvgr1 = gt_vbrp-kvgr1."业务员
    gt_alv-zxsyf = gt_vbrp-fkdat+0(6)."销售月份
    gt_alv-kunnr = gt_vbrp-kunnr."客户

    IF gt_vbrp-fkart EQ 'ZG8' OR gt_vbrp-fkart EQ 'ZG8S' OR gt_vbrp-fkart EQ 'ZF8' OR gt_vbrp-fkart EQ 'ZF8S'.
      gt_alv-fkimg = 0.
    ELSE.
      gt_alv-fkimg = gt_vbrp-fkimg."销售量
    ENDIF.

*  根据销售订单和订单行项目计算订单单价= KZWI1 / ZMENG
*   计算金额=单价* 发货数量 = KZWI1 / ZMENG * lfimg
*    CLEAR: gt_vbap,lv_knumv,lv_zmeng.
*    READ TABLE gt_vbap WITH KEY vbeln = gt_vbrp-vgbel posnr = gt_vbrp-vgpos BINARY SEARCH.
*    IF gt_vbap-zmeng NE 0.
*      lv_zmeng = gt_vbap-zmeng.
*    ENDIF.

    "原币金额，本币金额
    gt_alv-zxse_yb = gt_vbrp-zpric_yb.
    gt_alv-zxse_bb = gt_alv-zxse_yb * gt_vbrp-kursk .
*  贷项凭证，乘以-1
    IF gt_vbrp-fkart EQ 'ZF1S' OR gt_vbrp-fkart EQ 'ZF4S' OR gt_vbrp-fkart EQ 'ZF8S' OR gt_vbrp-fkart EQ 'ZG1'  OR gt_vbrp-fkart EQ 'ZG4' OR gt_vbrp-fkart EQ 'ZG8'.
      gt_alv-fkimg = gt_alv-fkimg * ( -1 ).
      gt_alv-zxse_yb = gt_alv-zxse_yb * ( -1 ).
      gt_alv-zxse_bb = gt_alv-zxse_bb * ( -1 ).
    ENDIF.

    gt_alv-waerk = gt_vbrp-waerk.
    gt_alv-zfer_xl = gt_vbrp-zfer_xl.
    gt_alv-zfer_zxh = gt_vbrp-zfer_zxh.

    CLEAR: lt_kna1.
    READ TABLE lt_kna1 WITH KEY kunnr = gt_alv-kunnr BINARY SEARCH.
    gt_alv-sortl = lt_kna1-sortl.
    CONCATENATE lt_kna1-name1 lt_kna1-name2 INTO gt_alv-name.
    IF gt_alv-kunnr = 'A000' OR gt_alv-kunnr = 'C000'.
      gt_alv-name = '零散客户'.
    ENDIF.

    gt_alv-vkorg = gt_vbrp-vkorg."公司代码
    gt_alv-vtweg = gt_vbrp-vtweg."分销渠道
    gt_alv-kvgr2 = gt_vbrp-kvgr2."商务
    gt_alv-spart = gt_vbrp-spart."产品组
    gt_alv-kdgrp = gt_vbrp-kdgrp."行业
    gt_alv-bzirk = gt_vbrp-bzirk."销售大区
    gt_alv-vkbur = gt_vbrp-vkbur."行办
    gt_alv-vkgrp = gt_vbrp-vkgrp."销售组
    gt_alv-kvgr1 = gt_vbrp-kvgr1."业务员
    gt_alv-bukrs = gt_vbrp-bukrs."销售组织

    gt_alv-vgbel = gt_vbrp-vgbel. "交货单
    gt_alv-vgpos = gt_vbrp-vgpos.
    gt_alv-vbeln = gt_vbrp-vbeln. "开票
    gt_alv-posnr = gt_vbrp-posnr.
    gt_alv-aubel = gt_vbrp-aubel. "订单
    gt_alv-aupos = gt_vbrp-aupos.
    gt_alv-matnr = gt_vbrp-matnr.
    gt_alv-arktx = gt_vbrp-arktx.
    gt_alv-zfer_cpx = gt_vbrp-zfer_cpx.
    APPEND gt_alv.

  ENDLOOP.
  DATA:         lt_vbap  LIKE TABLE OF vbap WITH HEADER LINE.

  SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_vbap FROM vbap FOR ALL ENTRIES IN gt_alv WHERE vbeln = gt_alv-aubel AND posnr = gt_alv-aupos.
  SORT lt_vbap BY vbeln posnr.

  LOOP AT gt_alv.
*   取销售大区描述
    READ TABLE lt_t171t WITH KEY bzirk = gt_alv-bzirk BINARY SEARCH.
    IF sy-subrc = 0.
      gt_alv-bztxt = lt_t171t-bztxt.
    ENDIF.
*   取行办描述
    READ TABLE lt_tvkbt WITH KEY vkbur = gt_alv-vkbur BINARY SEARCH.
    IF sy-subrc = 0.
      gt_alv-bezei_vkbur = lt_tvkbt-bezei.
    ENDIF.
*   取销售组描述
    READ TABLE lt_tvgrt WITH KEY vkgrp = gt_alv-vkgrp BINARY SEARCH.
    IF sy-subrc = 0.
      gt_alv-bezei_vkgrp = lt_tvgrt-bezei.
    ENDIF.
*   取业务员描述
    READ TABLE lt_tvv1t WITH KEY kvgr1 = gt_alv-kvgr1 BINARY SEARCH.
    IF sy-subrc = 0.
      gt_alv-bezei_kvgr1 = lt_tvv1t-bezei.
    ENDIF.
    SELECT SINGLE vtext INTO gt_alv-vtext_vtweg FROM tvtwt WHERE vtweg = gt_alv-vtweg AND spras = 1.
    SELECT SINGLE vtext INTO gt_alv-vtext_spart FROM tspat WHERE spart = gt_alv-spart AND spras = 1.
    SELECT SINGLE bezei INTO gt_alv-bezei_kvgr2 FROM tvv2t WHERE kvgr2 = gt_alv-kvgr2 AND spras = 1.
    SELECT SINGLE ktext INTO gt_alv-ktext_kdgrp FROM t151t WHERE kdgrp = gt_alv-kdgrp AND spras = 1.
    READ TABLE lt_vbap WITH  KEY vbeln = gt_alv-aubel  posnr = gt_alv-aupos BINARY SEARCH.
    IF sy-subrc = 0 AND lt_vbap-kwmeng <> 0.
      gt_alv-zjg = lt_vbap-kzwi1 / lt_vbap-kwmeng.
      gt_alv-meins = lt_vbap-meins.
    ENDIF.
    MODIFY gt_alv.
    CLEAR:gt_alv.
  ENDLOOP.


  SORT gt_alv BY bzirk vkbur vkgrp kvgr1 kunnr zfer_xl.
*  SORT gt_alv_total BY bzirk vkbur vkgrp kvgr1 kunnr zfer_xl.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SUB_BUILD_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_build_fieldcat .
*  REFRESH:g_it_fieldcat.

  PERFORM sub_fieldcat USING '' 'BUKRS'       '公司代码'      ''  ''  ''  ''  ''  ''  '' .
  PERFORM sub_fieldcat USING '' 'VKORG'       '销售组织'      ''  ''  ''  ''  ''  ''  ''.
  PERFORM sub_fieldcat USING '' 'VTWEG'       '分销渠道'      ''  ''  ''  ''  ''  ''   ''.
  PERFORM sub_fieldcat USING '' 'VTEXT_VTWEG'       '分销渠道'      ''  ''  ''  ''  ''  ''   ''.
  PERFORM sub_fieldcat USING '' 'SPART'       '产品组'      ''  ''  ''  ''  ''  ''   ''.
  PERFORM sub_fieldcat USING '' 'VTEXT_SPART'       '产品组'      ''  ''  ''  ''  ''  ''   ''.
  PERFORM sub_fieldcat USING '' 'KDGRP'       '行业'      ''  ''  ''  ''  ''  ''   ''.
  PERFORM sub_fieldcat USING '' 'KTEXT_KDGRP'       '行业'      ''  ''  ''  ''  ''  ''   ''.

  PERFORM sub_fieldcat USING '' 'BZIRK'       '销售大区代码'      ''  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING '' 'BZTXT'       '销售大区'          ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING '' 'VKBUR'       '行办代码'          ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING '' 'BEZEI_VKBUR' '行办'              ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING '' 'VKGRP'       '销售组代码'        ''  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING '' 'BEZEI_VKGRP' '销售组'            ''  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING '' 'KVGR1'       '业务员代码'        ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING '' 'BEZEI_KVGR1' '业务员'            ''  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING '' 'KVGR2'       '商务代码'        ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING '' 'BEZEI_KVGR2' '商务'            ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'KUNNR'       '客户'              'X'  ''  ''  ''  ''  'KUNNR'  'KNVV' .
  PERFORM sub_fieldcat USING ''  'NAME'        '客户名称'          ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'SORTL'        '客户简称'          ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'MATNR'     '物料编号'          'X'  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'ARKTX'     '物料描述'          ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'ZFER_ZXH'     '主型号'          ''  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'ZFER_XL'     '产品系列'          ''  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'ZFER_CPX'     '产品线'          ''  ''  ''  ''  ''    '' ''.
*  PERFORM sub_fieldcat USING ''  'ZXSYF'       '销售月份'          ''  ''  ''  ''  ''   '' ''.

  PERFORM sub_fieldcat USING ''  'VBELN'       '开票凭证'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'POSNR'       '开票项目号'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'VGBEL'       '交货单号'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'VGPOS'       '交货项目号'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'AUBEL'       '订单号'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'AUPOS'       '订单项目号'          'X'  ''  ''  ''  ''    '' ''.

  PERFORM sub_fieldcat USING ''  'FKIMG'       '销售数量'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'MEINS'       '单位'          ''  ''  ''  ''  ''    'MEINS' 'VBAP'.
  PERFORM sub_fieldcat USING ''  'WAERK'       '币别'              ''  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'ZJG'       '单价'          'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'ZXSE_YB'     '原币销售额'        'X'  ''  ''  ''  ''    '' ''.
  PERFORM sub_fieldcat USING ''  'ZXSE_BB'     '本币销售额'        'X'  ''  ''  ''  ''   '' ''.
  PERFORM sub_fieldcat USING ''  'ZXSE_BB'     '销售额'        'X'  ''  ''  ''  ''  ''   ''.

  g_gs_layout-zebra                = 'X'.
  g_gs_layout-colwidth_optimize    = 'X'.

ENDFORM.

FORM sub_fieldcat USING p_key p_field p_text p_zero p_dosum p_bgcolor p_edit p_outlen p_reffield p_reftable .
  CLEAR g_it_fieldcat.
  g_it_fieldcat-key = p_key.
  g_it_fieldcat-fieldname = p_field.
  g_it_fieldcat-reptext_ddic = p_text.
  g_it_fieldcat-no_zero = p_zero.
  g_it_fieldcat-checkbox = p_dosum.
  g_it_fieldcat-emphasize = p_bgcolor.
  g_it_fieldcat-edit = p_edit.
  g_it_fieldcat-outputlen = p_outlen.
  g_it_fieldcat-ref_fieldname = p_reffield.
  g_it_fieldcat-ref_tabname = p_reftable.
*  g_it_fieldcat-lowercase = p_mask.

  APPEND g_it_fieldcat.
ENDFORM.

FORM frm_display_alv TABLES p_tab USING p_user_command p_status_name .

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program = sy-repid
*     i_callback_user_command  = p_user_command
*     i_callback_pf_status_set = p_status_name
      it_fieldcat        = g_it_fieldcat[]
      i_save             = 'A'
      is_layout          = g_gs_layout
*     is_print           = g_gs_print
*     it_sort            = g_it_sort[]
    TABLES
      t_outtab           = p_tab
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
           WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.
